{"version":3,"sources":["./src/app/Componentes/ans-opts-details/ans-opts-details.component.ts","./src/app/Componentes/ans-opts-details/ans-opts-details.component.html","./src/app/Componentes/exam-studen-open-response/exam-studen-open-response.component.ts","./src/app/Componentes/exam-studen-open-response/exam-studen-open-response.component.html","./src/app/Componentes/exam-grade-main-view/exam-grade-main-view.component.ts","./src/app/Componentes/exam-grade-main-view/exam-grade-main-view.component.html","./src/app/Componentes/professor-main-view/professor-main-view.component.ts","./src/app/Componentes/professor-main-view/professor-main-view.component.html","./src/app/dto/StudentDto.ts","./src/app/services/selected-response.service.ts","./src/app/services/answer-option.service.ts","./src/environments/environment.ts","./src/app/dto/OpenQuestionDto.ts","./src/app/Componentes/exam-studen-selected-response/exam-studen-selected-response.component.ts","./src/app/Componentes/exam-studen-selected-response/exam-studen-selected-response.component.html","./src/app/Componentes/exam-students-responses/exam-students-responses.component.ts","./src/app/Componentes/exam-students-responses/exam-students-responses.component.html","./src/app/dto/abstractDto/QuestionDto.ts","./src/app/services/student.service.ts","./src/app/Componentes/question-main-view/question-main-view.component.ts","./src/app/Componentes/question-main-view/question-main-view.component.html","./src/app/pipes/correctAns.ts","./src/app/Componentes/create-professor/create-professor.component.ts","./src/app/Componentes/create-professor/create-professor.component.html","./src/app/Componentes/question-form/question-form.component.ts","./src/app/Componentes/question-form/question-form.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/dto/ProfessorDto.ts","./src/app/services/question.service.ts","./src/app/tools/manageAnsOpts.ts","./src/app/app.module.ts","./src/app/Componentes/exam-form/exam-form.component.ts","./src/app/Componentes/exam-form/exam-form.component.html","./src/app/Componentes/professor-interaction/professor-interaction.component.ts","./src/app/Componentes/professor-interaction/professor-interaction.component.html","./src/app/Componentes/page-not-found/page-not-found.component.ts","./src/app/Componentes/page-not-found/page-not-found.component.html","./src/app/dto/SelectedResponseDto.ts","./src/app/pipes/question-type.pipe.ts","./src/app/Componentes/exam-main-view/exam-main-view.component.ts","./src/app/Componentes/exam-main-view/exam-main-view.component.html","./src/app/Componentes/answer-option-form/answer-option-form.component.ts","./src/app/Componentes/answer-option-form/answer-option-form.component.html","./src/app/Componentes/manage-exam/manage-exam.component.ts","./src/app/Componentes/manage-exam/manage-exam.component.html","./src/app/dto/AnswerOptionDto.ts","./src/app/Componentes/exam-student-response-detail/exam-student-response-detail.component.ts","./src/app/Componentes/exam-student-response-detail/exam-student-response-detail.component.html","./src/app/services/open-response.service.ts","./src/app/Componentes/exam-details-view/exam-details-view.component.ts","./src/app/Componentes/exam-details-view/exam-details-view.component.html","./src/app/services/exam-student.service.ts","./src/app/dto/ExamDto.ts","./src/app/pipes/weight.pipe.ts","./src/app/Componentes/solve-exam/solve-exam.component.ts","./src/app/Componentes/solve-exam/solve-exam.component.html","./src/app/services/Professor.service.ts","./src/app/Componentes/student-form/student-form.component.ts","./src/app/Componentes/student-form/student-form.component.html","./src/app/app-routing.module.ts","./src/app/dto/OpenResponseDto.ts","./src/app/Componentes/answer-option-main-view/answer-option-main-view.component.ts","./src/app/Componentes/answer-option-main-view/answer-option-main-view.component.html","./src/app/dto/ExamStudentDto.ts","./src/main.ts","./src/app/services/exam.service.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { DynamicDialogConfig } from 'primeng/dynamicdialog';\nimport { AnswerOptionDto } from 'src/app/dto/AnswerOptionDto';\n\n@Component({\n  selector: 'app-ans-opts-details',\n  templateUrl: './ans-opts-details.component.html',\n  styleUrls: ['./ans-opts-details.component.css']\n})\nexport class AnsOptsDetailsComponent implements OnInit {\n\n  public ansOpts : Array<AnswerOptionDto>;\n\n  constructor(conf : DynamicDialogConfig) { \n    this.ansOpts = conf.data;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p-table [value]=\"ansOpts\" [paginator]=\"true\" [rows]=\"10\" sortMode=\"multiple\">\n    <ng-template pTemplate=\"header\">\n        <tr>\n            <th>Description</th>\n            <th>Is correct answer</th>\n            <th>Weight</th>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-ansOpt>\n        <tr>\n            <td>{{ansOpt.description}}</td>\n            <td>{{ansOpt.correctAnswer | correctAns}}</td>\n            <td>{{ansOpt.weight | weight}}</td>\n        </tr>\n    </ng-template>\n</p-table>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { QuestionDto } from 'src/app/dto/abstractDto/QuestionDto';\nimport { ExamStudentDto } from 'src/app/dto/ExamStudentDto';\nimport { OpenResponseDto } from 'src/app/dto/OpenResponseDto';\nimport { ExamStudentService } from 'src/app/services/exam-student.service';\nimport { OpenResponseService } from 'src/app/services/open-response.service';\n\n@Component({\n  selector: 'app-exam-studen-open-response',\n  templateUrl: './exam-studen-open-response.component.html',\n  styleUrls: ['./exam-studen-open-response.component.css']\n})\nexport class ExamStudenOpenResponseComponent implements OnInit {\n\n  public gradeForm : FormGroup;\n  public selectedQuestion : QuestionDto;\n  public examStudent : ExamStudentDto;\n  public openResponse : OpenResponseDto;\n\n  constructor(\n    private openResponseService : OpenResponseService,\n    private dynamicDialogConfig : DynamicDialogConfig,\n    private dynamicDialogRef : DynamicDialogRef,\n    private formBuilder : FormBuilder,\n    private examStudentService : ExamStudentService\n  ) {\n    this.gradeForm = this.formBuilder.group({\n      grade : ['', [Validators.required, Validators.min(0.0), Validators.max(5.0)]],\n      content : [{value : '', disabled : true }, [Validators.required]]\n    });\n\n    this.selectedQuestion = this.dynamicDialogConfig.data.selectedQuestion;\n    this.examStudent = this.dynamicDialogConfig.data.examStudent;\n    this.openResponse = new OpenResponseDto;\n  }\n\n  ngOnInit(): void {\n    this.getOpenResponse();\n  }\n\n  private getOpenResponse() : void {\n    this.openResponseService.getOpenResponsesByExamStudentAndQuestion(this.examStudent.id, this.selectedQuestion.id).subscribe(\n      openResponse => {\n        this.openResponse = openResponse;\n        this.gradeForm.setValue({\n          grade : this.openResponse.valoration,\n          content : openResponse.content\n        });\n      },\n      error => console.log(error)\n    );\n  }\n\n  private getInfoFromGradeForm() : void {\n    let gradeFormContent = this.gradeForm.value;\n    this.openResponse.valoration = gradeFormContent.grade;\n  }\n\n  private updateOpenResponse() : void {\n    this.openResponseService.updateOpenResponse(this.openResponse).subscribe(\n      openResponse => openResponse,\n      error => console.log(error) \n    );\n  }\n\n  private updateExamStuden() : void {\n    this.examStudentService.updateExamStudent(this.examStudent).subscribe(\n      examStudent => {\n        this.examStudent = examStudent;\n        this.dynamicDialogRef.close(this.examStudent);\n      },\n      error => {\n        console.log(error);\n        this.dynamicDialogRef.close();\n      }\n    );\n  }\n\n  private calculateNewExamStudentDefinitiveGrade() : void {\n    this.examStudent.definitiveGrade += this.selectedQuestion.weight * this.openResponse.valoration\n  }\n\n  public grade() : void {\n    this.getInfoFromGradeForm();\n    this.updateOpenResponse();\n    this.calculateNewExamStudentDefinitiveGrade();\n    this.updateExamStuden();\n  }\n\n  public cancel() : void {\n    this.dynamicDialogRef.close();\n  }\n}\n","<ul>\n    <li> <b>Question description: </b> {{selectedQuestion.description}} </li>\n    <li> <b>Question weight </b> {{selectedQuestion.weight}} </li>\n</ul>\n\n<h3> {{examStudent.student.name}} {{examStudent.student.lastname}} response </h3>\n<form [formGroup]=\"gradeForm\">\n    <div class=\"p-fluid p-formgrid p-grid\">\n        <div class=\"p-field p-col-12 p-md-12\">\n            <textarea [rows]=\"4\" [autoResize]=\"true\" pInputTextarea formControlName=\"content\"></textarea>\n        </div>\n\n        <div class=\"p-field p-col-12 p-md-12\">\n            <label for=\"grade\">Grade</label>\n            <p-inputNumber id=\"grade\" mode=\"decimal\" [max]=\"5\" [min]=\"0\" [step]=\"0.01\" [minFractionDigits]=\"1\" [maxFractionDigits]=\"2\" formControlName=\"grade\"></p-inputNumber>\n        </div>\n\n        <div class=\"p-field p-col-12 p-md-6\">\n            <p-button [disabled]=\"gradeForm.invalid\" icon=\"pi pi-pencil\" label=\"Grade\" class=\"p-button-secondary\" (click)=\"grade()\"></p-button>\n        </div>\n\n        <div class=\"p-field p-col-12 p-md-6\">\n            <p-button icon=\"pi pi-times\" label=\"Cancel\" class=\"p-button-secondary\" (click)=\"cancel()\"></p-button>\n        </div>\n\n    </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ExamDto } from 'src/app/dto/ExamDto';\nimport { ProfessorDto } from 'src/app/dto/ProfessorDto';\nimport { ExamService } from 'src/app/services/exam.service';\nimport { ProfessorService } from 'src/app/services/Professor.service';\n\n@Component({\n  selector: 'app-exam-grade-main-view',\n  templateUrl: './exam-grade-main-view.component.html',\n  styleUrls: ['./exam-grade-main-view.component.css']\n})\nexport class ExamGradeMainViewComponent implements OnInit {\n\n  public exams : Array<ExamDto>;\n  public professor : ProfessorDto;\n  public selectedExam : ExamDto;\n  public seeingStudentAns : boolean;\n\n  constructor(\n    private examService : ExamService,\n    private professorService : ProfessorService,\n    private router : Router\n  ) { \n    this.professor = new ProfessorDto;\n    this.exams = new Array<ExamDto>();\n    this.selectedExam = new ExamDto;\n    this.seeingStudentAns = false;\n  }\n\n  ngOnInit(): void {\n    this.setProfessor();\n  }\n\n  private setProfessor() : void {\n    this.professorService.getByUsername(\"professor\").subscribe( \n      professor => {\n        this.professor = professor;\n        this.setExams();\n      },\n      error => console.log(error)\n    );\n  }\n\n  private setExams() : void {\n    this.examService.getExamByProfessor(this.professor.id).subscribe(\n      exams => this.exams = exams,\n      error => console.log(error)\n    );\n  }\n  \n  public grade(selectedExam : ExamDto) : void {\n    this.selectedExam = selectedExam;\n    this.router.navigate(['professor-main-view/exam-students-view', {examId : selectedExam.id}]);\n  }\n}\n","<p-table #dt1 [value]=\"exams\" [paginator]=\"true\" [rows]=\"10\">\n    \n    <ng-template pTemplate=\"caption\">\n        <div class=\"table-header\">\n            Available exams\n        </div>\n    </ng-template>\n\n    <ng-template pTemplate=\"header\">\n        <tr>\n            <th pSortableColumn=\"name\">Name <p-sortIcon field=\"name\"></p-sortIcon></th>\n            <th pSortableColumn=\"durability\">Durability <p-sortIcon field=\"durability\"></p-sortIcon></th>\n            <th pSortableColumn=\"maxGrade\">Max grade <p-sortIcon field=\"maxGrade\"></p-sortIcon></th>\n            <th>Actions</th>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-exam>\n        <tr>\n            <td>{{exam.name}}</td>\n            <td>{{exam.durability}}</td>\n            <td>{{exam.maxGrade}}</td>\n            <td>\n                <button pButton type=\"button\" icon=\"pi pi-star-o\" class=\"p-button-text\" (click)=\"grade(exam)\"></button>\n            </td>\n        </tr>\n    </ng-template>\n</p-table>","import { Component, OnInit } from '@angular/core';\r\nimport { MenuItem } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-professor-main-view',\r\n  templateUrl: './professor-main-view.component.html',\r\n  styleUrls: ['./professor-main-view.component.css']\r\n})\r\nexport class ProfessorMainViewComponent implements OnInit {\r\n  \r\n  public barMenuItems: MenuItem[];\r\n  public display : boolean;\r\n\r\n  constructor() { \r\n    this.display = false;\r\n    this.barMenuItems = [{\r\n      icon: 'pi pi-bars',\r\n      command: (event) => {\r\n        this.display = true ;\r\n      } \r\n    }];\r\n  }\r\n\r\n  ngOnInit() : void {\r\n  }\r\n\r\n  setDisplay(display : boolean) {\r\n    this.display = display;\r\n  }\r\n\r\n}","<div>\r\n    <p-menubar [model]=\"barMenuItems\" >\r\n        <button pButton label=\"Logout\" icon=\"pi pi-power-off\"></button>\r\n    </p-menubar>\r\n</div>\r\n<app-professor-interaction (tellAboutDisplay)=\"setDisplay($event)\" [display]=\"display\"></app-professor-interaction>\r\n<router-outlet></router-outlet>","export class StudentDto {\r\n\r\n    public id : number;\r\n    public identificationCard : string;\r\n    public name : string;\r\n    public lastname : string;\r\n\r\n    constructor() {\r\n        this.id = 0;\r\n        this.identificationCard = \"\";\r\n        this.name = \"\";\r\n        this.lastname = \"\";\r\n    }\r\n\r\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { SelectedResponseDto } from '../dto/SelectedResponseDto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SelectedResponseService {\n  constructor(private http : HttpClient) { }\n\n  public getSelectedResponses() : Observable<Array<SelectedResponseDto>> {\n    return this.http.get<Array<SelectedResponseDto>>(environment.apiURL + 'selectedResponse/all');\n  }\n\n  public getSelectedResponseByExamStudentAndQuestion(examStudentId : number, ansOptId : number,) : Observable<SelectedResponseDto> {\n    return this.http.get<SelectedResponseDto>(environment.apiURL + \n      'selectedResponse/byexamstudentandquestion/?examStudentId=' + examStudentId + '&ansOptId=' + ansOptId);\n  }\n\n  public saveSelectedResponse(selectedResponse : SelectedResponseDto) : Observable<SelectedResponseDto> {\n    return this.http.post<SelectedResponseDto>(environment.apiURL + 'selectedResponse', selectedResponse);\n  }\n\n  public updateSelectedResponse(selectedResponse : SelectedResponseDto) : Observable<SelectedResponseDto> {\n    return this.http.put<SelectedResponseDto>(environment.apiURL + 'selectedResponse', selectedResponse);\n  }\n\n  public delSelectedResponse(selectedResponse : SelectedResponseDto) : Observable<String> {\n    return this.http.delete(environment.apiURL + 'selectedResponse/' + selectedResponse.id, {responseType : 'text'});\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { AnswerOptionDto } from '../dto/AnswerOptionDto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnswerOptionService {\n\n  constructor(private http : HttpClient) { }\n\n  public getAnsOpts() : Observable<Array<AnswerOptionDto>> {\n    return this.http.get<Array<AnswerOptionDto>>(environment.apiURL + 'ansopt/all');\n  }\n\n  public getAnsOptByQuestion(questionID : Number) : Observable<Array<AnswerOptionDto>> {\n    return this.http.get<Array<AnswerOptionDto>>(environment.apiURL + 'ansopt/' + questionID);\n  }\n\n  public saveQAnsOpt(ansOpt : AnswerOptionDto) : Observable<AnswerOptionDto> {\n    return this.http.post<AnswerOptionDto>(environment.apiURL + 'ansopt', ansOpt);\n  }\n\n  public updateAnsOpt(ansOpt : AnswerOptionDto) : Observable<AnswerOptionDto> {\n    return this.http.put<AnswerOptionDto>(environment.apiURL + 'ansopt', ansOpt);\n  }\n\n  public delAnsOpt(ansOpt : AnswerOptionDto) : Observable<String> {\n    return this.http.delete(environment.apiURL + 'ansopt/' + ansOpt.id, {responseType : 'text'});\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiURL : '',\n  // apiURL : 'http://localhost:8090/',\n  urlExams : 'http://localhost:4200/present-exam/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { QuestionDto } from './abstractDto/QuestionDto';\r\nimport { AnswerOptionDto } from './AnswerOptionDto';\r\n\r\nexport class OpenQuestionDto extends QuestionDto {\r\n    \r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { QuestionDto } from 'src/app/dto/abstractDto/QuestionDto';\nimport { AnswerOptionDto } from 'src/app/dto/AnswerOptionDto';\nimport { ExamStudentDto } from 'src/app/dto/ExamStudentDto';\nimport { AnswerOptionService } from 'src/app/services/answer-option.service';\nimport { SelectedResponseService } from 'src/app/services/selected-response.service';\n\n@Component({\n  selector: 'app-exam-studen-selected-response',\n  templateUrl: './exam-studen-selected-response.component.html',\n  styleUrls: ['./exam-studen-selected-response.component.css']\n})\nexport class ExamStudenSelectedResponseComponent implements OnInit {\n\n  public selectedQuestion : QuestionDto;\n  public examStudent : ExamStudentDto;\n  public asnOpts : Array<AnswerOptionDto>;\n\n  public selectedAnsOpt : AnswerOptionDto;\n  public selectedAnsOpts : Array<AnswerOptionDto>;\n\n  constructor(\n    private selectedResponseService : SelectedResponseService,\n    private ansOptsService : AnswerOptionService,\n    private dynamicDialogConfig : DynamicDialogConfig,\n    private dynamicDialogRef : DynamicDialogRef\n  ) { \n    this.selectedQuestion = this.dynamicDialogConfig.data.selectedQuestion;\n    this.examStudent = this.dynamicDialogConfig.data.examStudent;\n    this.asnOpts = new Array<AnswerOptionDto>();\n\n    this.selectedAnsOpt = new AnswerOptionDto;\n    this.selectedAnsOpts = new Array<AnswerOptionDto>();\n  }\n\n  ngOnInit(): void {\n    this.getAnsOpts();\n  }\n\n  private getAnsOpts() : void {\n    this.ansOptsService.getAnsOptByQuestion(this.selectedQuestion.id).subscribe(\n      ansOpts => {\n        this.asnOpts = ansOpts;\n        this.asnOpts.forEach( ansOpt => this.getSelectedResponse(ansOpt));\n      },\n      error => console.log(error)\n    )\n  }\n\n  private getSelectedResponse(ansOpt : AnswerOptionDto) : void {\n    this.selectedResponseService.getSelectedResponseByExamStudentAndQuestion(this.examStudent.id, ansOpt.id).subscribe(\n      selectedResponse => {\n        if (selectedResponse && this.selectedQuestion.type === \"mu\" && selectedResponse.answerOption.id === ansOpt.id) {\n          this.selectedAnsOpt = ansOpt;\n        }\n        else if(selectedResponse && this.selectedQuestion.type === \"mm\" && selectedResponse.answerOption.id === ansOpt.id) {\n          let temp : Array<AnswerOptionDto> = [ansOpt];\n          this.selectedAnsOpts.forEach( item => {temp.push(item);});\n          this.selectedAnsOpts = temp;\n        }\n      },\n      error => console.log(error),\n    );\n  }\n\n}\n","<ul>\n    <li> <b>Question description: </b> {{selectedQuestion.description}} </li>\n    <li> <b>Question weight </b> {{selectedQuestion.weight}} </li>\n</ul>\n\n<h3> {{examStudent.student.name}} {{examStudent.student.lastname}} response </h3>\n<div *ngIf=\"selectedQuestion.type==='mu'\">\n    <div *ngFor=\"let ansOpt of asnOpts\" class=\"p-field-radiobutton\">\n        <p-radioButton [disabled]=\"true\" [inputId]=\"ansOpt.id.toString()\" name=\"multipleUniqueGroup\" [value]=\"ansOpt\" [(ngModel)]=\"selectedAnsOpt\"></p-radioButton>\n        <label [for]=\"ansOpt.id\">{{ansOpt.description}}</label>\n    </div>\n</div>\n\n<div *ngIf=\"selectedQuestion.type==='mm'\">\n    <div *ngFor=\"let ansOpt of asnOpts\" class=\"p-field-checkbox\">\n        <p-checkbox [readonly]=\"true\" [inputId]=\"ansOpt.id.toString()\" name=\"multipleMultipleGroup\" [value]=\"ansOpt\"  [(ngModel)]=\"selectedAnsOpts\"></p-checkbox>\n        <label [for]=\"ansOpt.id\">{{ansOpt.description}}</label>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ExamDto } from 'src/app/dto/ExamDto';\nimport { ExamStudentDto } from 'src/app/dto/ExamStudentDto';\nimport { ExamStudentService } from 'src/app/services/exam-student.service';\n\n@Component({\n  selector: 'app-exam-grade-students-responses',\n  templateUrl: './exam-students-responses.component.html',\n  styleUrls: ['./exam-students-responses.component.css']\n})\nexport class ExamStudentsResponsesComponent implements OnInit {\n\n  public examStudents : Array<ExamStudentDto>;\n\n  constructor(\n    private examStudentService : ExamStudentService,\n    private activatedRoute : ActivatedRoute,\n    private router : Router\n  ) { \n    this.examStudents = new Array<ExamStudentDto>();\n  }\n\n  ngOnInit(): void {\n    this.activatedRoute.paramMap.subscribe(\n      param => {\n        this.getExamStudent(Number(param.get('examId')));\n      }\n    );\n  }\n\n  private getExamStudent(examId : number) : void {\n    this.examStudentService.getExamStudentsByExam(examId).subscribe(\n      examStudents => this.examStudents = examStudents,\n      error => console.log(error)\n    );\n  }\n\n  public grade(selectedExamStudent : ExamStudentDto) : void {\n    this.router.navigate(['professor-main-view/exam-student-response-detail', {examStudentId : selectedExamStudent.id}]);\n  }\n}\n","<p-table #dt1 [value]=\"examStudents\" [paginator]=\"true\" [rows]=\"10\">\n    \n    <ng-template pTemplate=\"caption\">\n        <div class=\"table-header\">\n            Students that have responses\n        </div>\n    </ng-template>\n\n    <ng-template pTemplate=\"header\">\n        <tr>\n            <th pSortableColumn=\"identificationCard\">Identification card <p-sortIcon field=\"identificationCard\"></p-sortIcon></th>\n            <th pSortableColumn=\"name\">Name <p-sortIcon field=\"name\"></p-sortIcon></th>\n            <th pSortableColumn=\"lastname\">Lastname <p-sortIcon field=\"lastname\"></p-sortIcon></th>\n            <th pSortableColumn=\"FinalGrade\">Final grade <p-sortIcon field=\"finalGrade\"></p-sortIcon></th>\n            <th>Actions</th>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-examStudent>\n        <tr>\n            <td>{{examStudent.student.identificationCard}}</td>\n            <td>{{examStudent.student.name}}</td>\n            <td>{{examStudent.student.lastname}}</td>\n            <td>{{examStudent.definitiveGrade}}</td>\n            <td>\n                <button pButton type=\"button\" icon=\"pi pi-star-o\" class=\"p-button-text\" (click)=\"grade(examStudent)\"></button>\n            </td>\n        </tr>\n    </ng-template>\n</p-table>","import {ExamDto } from '../ExamDto';\r\n\r\nexport abstract class QuestionDto {\r\n\r\n    public id : number;\r\n    public description : string;\r\n    public questionImage : string;\r\n    public weight : number;\r\n    public exam : ExamDto;\r\n    public type : string;\r\n\r\n    constructor() {\r\n        this.id = 0;\r\n        this.description = \"\";\r\n        this.questionImage = \"\";\r\n        this.weight = 0.0;\r\n\r\n        // op -> open | mu -> multiple unique | mm -> multiple multiple\r\n        this.type = \"op\";\r\n        this.exam = new ExamDto;\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { StudentDto } from '../dto/StudentDto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentService {\n\n  constructor(private http : HttpClient) { }\n\n  public getStudents() : Observable<Array<StudentDto>> {\n    return this.http.get<Array<StudentDto>>(environment.apiURL + 'student/all');\n  }\n\n  public getStudentByIdentificationCard(identCard : string) : Observable<StudentDto> {\n    return this.http.get<StudentDto>(environment.apiURL + 'student/byIdentCard?id=' + identCard);\n  }\n\n  public saveStudent(student : StudentDto) : Observable<StudentDto> {\n    return this.http.post<StudentDto>(environment.apiURL + 'student', student);\n  }\n\n  public updateStudent(student : StudentDto) : Observable<StudentDto> {\n    return this.http.put<StudentDto>(environment.apiURL + 'student', student);\n  }\n\n  public delStudent(student : StudentDto) : Observable<String> {\n    return this.http.delete(environment.apiURL + 'student/' + student.id, {responseType : 'text'});\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { QuestionDto } from 'src/app/dto/abstractDto/QuestionDto';\nimport { AnswerOptionDto } from 'src/app/dto/AnswerOptionDto';\nimport { OpenQuestionDto } from 'src/app/dto/OpenQuestionDto';\nimport { AnswerOptionService } from 'src/app/services/answer-option.service';\nimport { QuestionService } from 'src/app/services/question.service';\nimport { ManageAnsOpts } from 'src/app/tools/manageAnsOpts';\n\n@Component({\n  selector: 'app-question-main-view',\n  templateUrl: './question-main-view.component.html',\n  styleUrls: ['./question-main-view.component.css'],\n  providers: [MessageService]\n})\nexport class QuestionMainViewComponent implements OnInit {\n\n  @Input() questions : Array<OpenQuestionDto>;\n  @Output() questionsChange : any;\n\n  @Input() questionForm : FormGroup;\n  @Output() questionFormChange : any;\n\n  @Input() question : OpenQuestionDto;\n  @Output() questionChange : any;\n\n  @Input() creatingQuestion : boolean;\n  @Output() creatingQuestionChange : any;\n\n  @Input() maxWeight : number;\n  @Output() maxWeightChange : any;\n\n  @Input() manageAnsOpts : ManageAnsOpts;\n  @Output() manageAnsOptsChange : any;\n\n  constructor(\n    private formBuilder : FormBuilder,\n    private messageService : MessageService,\n    private questionService : QuestionService,\n    private ansOptService : AnswerOptionService\n    ) {\n\n    this.questions = new Array<OpenQuestionDto>();\n    this.questionsChange = new EventEmitter<Array<OpenQuestionDto>>();\n\n    this.question = new OpenQuestionDto;\n    this.questionChange = new EventEmitter<OpenQuestionDto>();\n\n    this.questionForm = this.formBuilder.group({});\n    this.questionFormChange = new EventEmitter<FormGroup>();\n\n    this.creatingQuestion = true;\n    this.creatingQuestionChange = new EventEmitter<boolean>();\n\n    this.maxWeight = 0;\n    this.maxWeightChange = new EventEmitter<number>();\n\n    this.manageAnsOpts = new ManageAnsOpts;\n    this.manageAnsOptsChange = new EventEmitter<ManageAnsOpts>();\n  }\n\n  ngOnInit(): void {\n  }\n\n  private putQuestionInfoIntoQuestionForm(question : QuestionDto) : void {\n    \n    let type : any;\n    if (question.type === \"op\") {\n      type = {code : \"op\", name : \"Open question\"};\n    } else if (question.type === \"mu\") {\n      type = {code : \"mu\", name : \"Multiple unique\"};\n    } else {\n      type = {code : \"mm\", name : \"Multiple multiple\"};\n    }\n\n    this.questionForm.setValue({\n      weight : question.weight,\n      type : type,\n      description : question.description\n    });\n  }\n\n  public addMaxWeight(question : QuestionDto) : void {\n    this.maxWeight += question.weight\n    this.maxWeight = Number(this.maxWeight.toPrecision(2));\n    this.maxWeightChange.emit(this.maxWeight);\n  }\n\n  private getAnswerOptions(question : QuestionDto) : void {\n\n    if (question.type === \"op\") {\n      return;\n    }\n\n    this.ansOptService.getAnsOptByQuestion(question.id).subscribe(\n      ansOpts => {\n        this.manageAnsOpts.ansOpts = ansOpts;\n        this.manageAnsOptsChange.emit(this.manageAnsOpts);\n      },\n      error => console.log(error)\n    );\n  }\n\n  public updateQuestion(question : OpenQuestionDto) : void {\n    this.question = question;\n    this.questionChange.emit(this.question);\n    this.getAnswerOptions(question);    \n    this.creatingQuestionChange.emit(false);\n    this.putQuestionInfoIntoQuestionForm(question);\n    this.questionFormChange.emit(this.questionForm);\n    this.addMaxWeight(question);\n  }\n\n  private delQuestImage(question : QuestionDto) : void {\n    if (question.questionImage !== \"\") {\n      this.questionService.delImage(question.questionImage);\n    }\n  }\n\n  public delQuestion(question : OpenQuestionDto) : void {\n    this.questionService.delQuestion(question).subscribe(\n      response => {\n        this.delQuestImage(question);\n        this.messageService.add({severity:'success', summary:'Success', detail:'Question deleted successfully'});\n        this.questions.splice(this.questions.indexOf(question), 1);\n        this.questionsChange.emit(this.questions);\n        this.addMaxWeight(question);\n      },\n      error => console.log(error)\n    );\n  }\n\n}\n","<p-toast></p-toast>\n<p-table [value]=\"questions\" [paginator]=\"true\" [rows]=\"10\" sortMode=\"multiple\">\n    <ng-template pTemplate=\"header\">\n        <tr>\n            <th>Question</th>\n            <th>Kind of question</th>\n            <th>Weight</th>\n            <th>Action</th>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-question>\n        <tr>\n            <td>{{question.description}}</td>\n            <td>{{question.type | questionType}}</td>\n            <td>{{question.weight | weight}}</td>\n            <td>\n                <button [disabled]=\"!creatingQuestion\" pButton type=\"button\" icon=\"pi pi-pencil\" class=\"p-button-text\" (click)=\"updateQuestion(question)\"></button>\n                <button [disabled]=\"!creatingQuestion\" pButton type=\"button\" icon=\"pi pi-trash\" class=\"p-button-text\" (click)=\"delQuestion(question)\"></button>\n            </td>\n        </tr>\n    </ng-template>\n</p-table>","import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({name: 'correctAns'})\r\nexport class correctAnswerPipe implements PipeTransform {\r\n    transform(isCorrectAns: boolean) {\r\n        return (isCorrectAns) ? 'Yes' : 'No';\r\n    }\r\n}","import { Component } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { ProfessorDto } from '../../dto/ProfessorDto';\nimport { ProfessorService } from '../../services/Professor.service';\n\nimport {MessageService} from 'primeng/api';\n\n@Component({\n  selector: 'app-create-professor',\n  templateUrl: './create-professor.component.html',\n  styleUrls: ['./create-professor.component.css'],\n  providers: [MessageService]\n})\nexport class CreateProfessorComponent  {\n\n  public form : FormGroup;\n\n  constructor(private ProfessorService : ProfessorService,\n    private formBuilder : FormBuilder,\n    private router : Router,\n    private messageService : MessageService\n    ) {  \n      this.form = this.formBuilder.group({\n        id : ['', []],\n        identificationCard : new FormControl('', [Validators.pattern(\"[0-9]+\"), Validators.maxLength(15)]),\n        name : new FormControl('', [Validators.required, Validators.maxLength(100)]),\n        lastname : new FormControl('', [Validators.required, Validators.maxLength(100)]),\n        email : new FormControl('', [Validators.required, Validators.maxLength(100), Validators.email]),\n        username : new FormControl('', [Validators.required, Validators.maxLength(100)]),\n        password : new FormControl('', [Validators.required, Validators.minLength(8), Validators.maxLength(16)])\n      });\n    }\n\n  public saveProfessor() : void {    \n    this.ProfessorService.saveProfessor(<ProfessorDto> this.form.value).subscribe(\n      response => {\n        this.form.reset();\n        this.messageService.add({severity:'success', summary:'Success', detail:'Professor created successfully'});\n        this.router.navigate([\"/professor-main-view\"]);\n      },\n      error => {\n        console.log(error);\n        let errorMessageObject : String = error.error;\n        let errorMessage : string, errorStatus : string = error.status;\n        \n        this.messageService.add({severity:'error', summary:errorStatus, \n          detail:'error', sticky : true});\n        //console.log(error);\n      }\n    );\n  }\n\n  public cancel() : void {\n    this.form.reset();\n    \n    this.router.navigate([\"/professor-main-view\"]);\n  }\n}\n","<p-toast></p-toast>\n<form [formGroup]=\"form\">\n    <div class=\"p-fluid p-formgrid p-grid\">\n        <div class=\"p-field p-col-12 p-md-6\">\n            <span class=\"p-float-label\">\n                <input id=\"identificationCard\" type=\"text\" pInputText formControlName=\"identificationCard\"> \n                <label for=\"inputtext\">Identification Card</label>\n            </span>\n        </div>\n        <div class=\"p-field p-col-12 p-md-6\">\n            <span class=\"p-float-label p-input-icon-left form-user__div-span\">\n                    <input id=\"name-input\" type=\"text\" pInputText formControlName=\"name\"> \n                    <label for=\"name-input\">Name</label>\n            </span>\n        </div>\n        <div class=\"p-field p-col-12 p-md-6\">\n        <span class=\"p-float-label p-input-icon-right form-user__div-span\">\n                <input id=\"lastname-input\" type=\"text\" pInputText formControlName=\"lastname\"> \n                <label for=\"lastname-input\">Lastname</label>\n            </span>\n        </div>\n\n        <div class=\"p-field p-col-12 p-md-6\">\n            <span class=\"p-float-label p-input-icon-right\">\n                <input id=\"email-input\" type=\"email\" pInputText formControlName=\"email\"> \n                <label for=\"email-input\">Email</label>\n            </span>\n        </div>\n        <div class=\"p-field p-col-12 p-md-6\">\n            <span class=\"p-float-label p-input-icon-right\">\n                <input id=\"username-input\" type=\"text\" pInputText formControlName=\"username\"> \n                <label for=\"username-input\">Username</label>\n            </span>\n        </div>\n        <div class=\"form-p-field p-col-12 p-md-6\">\n            <span class=\"p-float-label p-input-icon-right\">\n                <input id=\"password-input\" type=\"password\" pInputText formControlName=\"password\"> \n                <label for=\"password-input\">Password</label>\n            </span>\n        </div>\n\n        <div class=\"p-field p-col-12 p-md-6\">\n            <p-button [disabled]=\"form.invalid\" icon=\"pi pi-pencil\" label=\"Create user\" class=\"p-button-secondary\" (click)=\"saveProfessor()\"></p-button>\n        </div>\n        <div class=\"p-field p-col-12 p-md-6\">\n            <p-button icon=\"pi pi-times\" label=\"Cancel\" class=\"p-button-danger\" (click)=\"cancel()\">  </p-button>\n        </div>\n    </div>\n</form>","import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { DialogService, DynamicDialogConfig } from 'primeng/dynamicdialog';\nimport { ConfirmationService } from 'primeng/api';\nimport { QuestionDto } from 'src/app/dto/abstractDto/QuestionDto';\nimport { AnswerOptionDto } from 'src/app/dto/AnswerOptionDto';\nimport { ExamDto } from 'src/app/dto/ExamDto';\nimport { OpenQuestionDto } from 'src/app/dto/OpenQuestionDto';\nimport { QuestionService } from 'src/app/services/question.service';\nimport { AnswerOptionFormComponent } from '../answer-option-form/answer-option-form.component';\nimport { AnswerOptionService } from 'src/app/services/answer-option.service';\nimport { ManageAnsOpts } from 'src/app/tools/manageAnsOpts';\n\n@Component({\n  selector: 'app-question-form',\n  templateUrl: './question-form.component.html',\n  styleUrls: ['./question-form.component.css'],\n  providers: [MessageService, DialogService, ConfirmationService]\n})\nexport class QuestionFormComponent implements OnInit {\n\n  @Input() public exams : Array<ExamDto>;\n  public dropListExams : Array<ExamDto>;\n  public questionTypes : Array<any>;\n  public exam : ExamDto;\n  public questionForm : FormGroup;\n  public question : OpenQuestionDto;\n  public questions : Array<OpenQuestionDto>;\n  public creatingQuestion : boolean;\n  public maxWeight : number;\n  public imgURL : any;\n  public loadedImage : any;\n  public manageAnsOpts : ManageAnsOpts;\n\n  constructor(\n    private questionService : QuestionService,\n    private formBuilder : FormBuilder,\n    private messageService : MessageService,\n    private dynamicService : DialogService,\n    private confirmDialog : ConfirmationService,\n    private answerOptionService : AnswerOptionService\n    ) {\n\n      this.manageAnsOpts = new ManageAnsOpts();\n      this.questionTypes = [\n        {code : \"op\", name : \"Open question\"},\n        {code : \"mu\", name : \"Multiple unique\"}, \n        {code : \"mm\", name : \"Multiple multiple\"}\n      ];\n\n      this.dropListExams = new Array<ExamDto>();\n      this.exams = new Array<ExamDto>();\n      this.questions = new Array<OpenQuestionDto>();\n      this.exam = new ExamDto;\n      this.maxWeight = 1;\n\n      this.questionForm = this.formBuilder.group({\n        weight : new FormControl(0.0, [Validators.required, Validators.min(0.01), Validators.max(this.maxWeight)]),\n        type : new FormControl(this.questionTypes[0], [Validators.required]),\n        description : new FormControl('', [Validators.required, Validators.min(1), Validators.max(200)])\n      });\n\n      this.question = new OpenQuestionDto;\n      this.creatingQuestion = true;\n      this.loadedImage = undefined\n      this.imgURL = \"\";\n  }\n\n  ngOnInit(): void {\n  }\n\n  private resetComponentAttributes() : void {\n    this.dropListExams = new Array<ExamDto>();\n    this.question = new OpenQuestionDto;\n    this.questions = new Array<QuestionDto>();\n    this.manageAnsOpts = new ManageAnsOpts();\n    this.loadedImage = undefined;\n    this.imgURL = \"\";\n    this.creatingQuestion = true;\n    this.maxWeight = 1;\n  }\n\n  public search(event : any) : void {\n    this.resetComponentAttributes();\n    this.exams.forEach( exam => {\n      (exam.name.indexOf(event.query) != -1) ? this.dropListExams.push(exam) : false\n    });\n  }\n\n  private subMaxWeight(question : QuestionDto) : void {\n    this.maxWeight -= question.weight;\n    this.maxWeight = Number (this.maxWeight.toPrecision(2));\n  }\n\n  private calculateMaxAvailableGrade() : void {\n    let maxWeight : number = 1;\n    this.questions.forEach( question => {\n      maxWeight -= question.weight;\n      maxWeight = Number (maxWeight.toPrecision(2));\n    });\n    this.maxWeight = maxWeight\n  }\n\n  public setQuestions() : void {\n    this.questionService.getQuestionByExam(this.exam.id).subscribe(\n      questions => {\n        this.questions = questions;\n        this.calculateMaxAvailableGrade();\n      },\n      error => console.log(error)\n    );    \n  }\n\n  private resetQuestionForm() : void {\n    this.questionForm.reset({\n      weight : 0.0,\n      type : this.questionTypes[0],\n      description : ''\n    });\n  }\n\n\n  public onFileChanged(event : any) : void {\n    let selectedImage = event.target.files[0];\n\n    if (selectedImage) {\n\n      this.loadedImage = selectedImage;\n\n      // Below part is used to display the selected image\n      let readerBase64 = new FileReader();\n      readerBase64.readAsDataURL(selectedImage);\n      readerBase64.onload = () => { \n        this.imgURL = readerBase64.result;\n      };\n    } else {\n      this.imgURL = \"\";\n      this.loadedImage = undefined;\n    }    \n  }\n\n  private getInfoFromQuestionForm(question : OpenQuestionDto) : void {\n    let questionForm  =  this.questionForm.value;\n    question.weight = questionForm.weight;\n    question.type = questionForm.type.code;\n    question.description = questionForm.description;\n  }\n\n  private saveAnswerOpt(question : QuestionDto) : void {\n    this.manageAnsOpts.newAnsOpts.forEach( ansOpt => {\n      ansOpt.question = question;\n      this.answerOptionService.saveQAnsOpt(ansOpt).subscribe(\n        ansOpt => ansOpt,\n        error => console.log(error)\n      );\n    });\n  }\n\n  private updateAnswerOpt(question : QuestionDto) : void {\n    this.manageAnsOpts.uptAnsOpts.forEach( ansOpt => {\n      ansOpt.question = question;\n      this.answerOptionService.updateAnsOpt(ansOpt).subscribe(\n        ansOpt => ansOpt,\n        error => console.log(error)\n      );\n    });\n  }\n\n  private delAnswerOpt(question : QuestionDto) : void {\n    this.manageAnsOpts.delAnsOpts.forEach( ansOpt => {\n      ansOpt.question = question;\n      this.answerOptionService.delAnsOpt(ansOpt).subscribe(\n        response => response,\n        error => console.log(error)\n      );\n    });\n  }\n\n  private saveQuestionIntoDataBase(question : QuestionDto) : void {\n    this.questionService.saveQuestion(question).subscribe(\n      question => {\n        this.messageService.add({severity:'success', summary:'Success', detail:'Question created successfully'})\n        this.questions.push(question);\n        this.subMaxWeight(question);\n        this.manageAnsOpts.resolve();\n        this.saveAnswerOpt(question);\n        this.manageAnsOpts.resetAttributes();\n      },\n      error => {\n        console.log(error);\n        this.manageAnsOpts.resetAttributes();\n      }\n    );\n  }\n\n  private saveSelectedImageIntoDataBase(question : QuestionDto) : void {\n    this.questionService.saveImage(this.loadedImage).subscribe(\n      imageName => {\n        question.questionImage = imageName;\n        this.saveQuestionIntoDataBase(question);\n      },\n      error => console.log(error)\n    );\n  }\n\n  public saveQuestion() : void {\n    let question = new OpenQuestionDto;\n    question.exam = this.exam;\n    this.getInfoFromQuestionForm(question);\n    this.resetQuestionForm();\n\n    if (this.loadedImage) {\n      this.saveSelectedImageIntoDataBase(question);\n      this.loadedImage = undefined;\n      this.imgURL = \"\";\n    } else {\n      this.saveQuestionIntoDataBase(question);\n    }\n  }\n\n  private updateQuestionIntoDataBase(question : QuestionDto, index : number) : void {\n    this.questionService.updateQuestion(this.question).subscribe( \n      question => {\n        this.messageService.add({severity:'success', summary:'Success', detail:'Question updated successfully'});\n        this.questions.splice(index, 1, question);\n        this.calculateMaxAvailableGrade();\n        this.manageAnsOpts.resolve();\n        this.saveAnswerOpt(question);\n        this.updateAnswerOpt(question);\n        this.delAnswerOpt(question);\n        this.manageAnsOpts.resetAttributes();\n      },\n      error => {\n        console.log(error);\n        this.subMaxWeight(this.question);\n        this.manageAnsOpts.resetAttributes();\n      }\n    );\n  }\n\n  private updateSelectedImageIntoDataBase(question : QuestionDto, index : number) : void {\n    this.questionService.saveImage(this.loadedImage).subscribe(\n      imageRoute => {\n        question.questionImage = imageRoute;\n        this.updateQuestionIntoDataBase(question, index);\n      },\n      error => console.log(error)\n    );\n  }\n\n  private deleteModifiedImageIntoDataBase(question : QuestionDto) : void {\n    if (question.questionImage === \"\") {\n      return;\n    }\n\n    this.questionService.delImage(question.questionImage).subscribe(\n      response => response,\n      error => console.log(error)\n    );\n  }\n\n  public updateQuestion() : void {\n    let index = this.questions.findIndex( (q) => q === this.question );\n    \n    if (index === -1) { \n      console.log(\"question not found!\");\n      return;\n    }\n\n    this.getInfoFromQuestionForm(this.question);\n\n    if (this.loadedImage) {\n      this.deleteModifiedImageIntoDataBase(this.question);\n      this.updateSelectedImageIntoDataBase(this.question, index);\n      this.loadedImage = undefined;\n      this.imgURL = \"\";\n    } else {\n      this.updateQuestionIntoDataBase(this.question, index);\n    }\n    \n    this.question = new OpenQuestionDto;\n    this.creatingQuestion = true;\n    this.resetQuestionForm();\n  }\n\n  public cancelUpdateQuestion() : void {\n    this.subMaxWeight(this.question);\n    this.resetQuestionForm();\n    this.creatingQuestion = true;\n    this.question = new OpenQuestionDto;\n    this.manageAnsOpts = new ManageAnsOpts;\n  }\n\n  private goToAddAnsOpt(event : any) : void {\n    let questionType = event.value;\n    this.question.type = questionType.code;\n    let ref = this.dynamicService.open(AnswerOptionFormComponent, {\n      data : {question : this.question, manageAnsOpts : this.manageAnsOpts},\n      header: 'Manage answer option',\n      width: '70%'\n    });\n\n    ref.onClose.subscribe((manageAnsOpts : ManageAnsOpts) => {\n      if (manageAnsOpts) {\n        this.manageAnsOpts = manageAnsOpts;\n      }\n      else {\n        let OPEN_QUESTION_INDEX = 0;\n        let questionForm = this.questionForm.value;\n\n        this.questionForm.setValue({\n          weight : questionForm.weight,\n          type : this.questionTypes[OPEN_QUESTION_INDEX],\n          description : questionForm.description\n        });\n      }\n    });\n  }\n\n  public addAnsOpts(event : any) : void {\n\n    if (event.value.code === \"op\") {\n      return;\n    }\n\n    if (this.manageAnsOpts.ansOpts.length) {\n      this.confirmDialog.confirm({\n        message: 'if you want to proceed, saved answer options from last question will be erased!',\n        accept: () => {\n          this.manageAnsOpts.ansOpts = new Array<AnswerOptionDto>();\n          this.goToAddAnsOpt(event);\n        },\n        reject: () => {\n\n        }\n      });\n    }\n    else {\n      this.goToAddAnsOpt(event);\n    }\n  }\n\n  public updateAnsOpt() : void {\n    let ref = this.dynamicService.open(AnswerOptionFormComponent, {\n      data : {question : this.question, manageAnsOpts : this.manageAnsOpts},\n      header: 'Update answer options',\n      width: '70%'\n    });\n\n    ref.onClose.subscribe((manageAnsOpts : ManageAnsOpts) => {\n      if (manageAnsOpts) {\n        this.manageAnsOpts = manageAnsOpts;\n      }\n    });\n  }\n}\n","<p-toast></p-toast>\n<p-confirmDialog header=\"Confirmation\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\n\n<div class=\"p-fluid p-formgrid p-grid\">\n    <div class=\"p-field p-col-12\">\n        <label for=\"auto-question-exam\">Select an exam</label>\n        <p-autoComplete id=\"auto-question-exam\" [(ngModel)]=\"exam\" (onSelect)=\"setQuestions()\" [suggestions]=\"dropListExams\" [dropdown]=\"true\" (completeMethod)=\"search($event)\" field=\"name\"></p-autoComplete>\n    </div>\n</div>\n\n<div *ngIf=\"exam.id !== 0\">\n    <form [formGroup]=\"questionForm\">\n        <div class=\"p-fluid p-formgrid p-grid\">\n            <div class=\"p-field p-col-12\">\n                <input type=\"file\" accept=\"image/png, image/jpeg\" (change)=\"onFileChanged($event)\">\n                <img [src]=\"imgURL\" height=\"25\" *ngIf=\"imgURL\">\n            </div>\n            <div class=\"p-field p-col-6\">\n                <label for=\"questionType\">Kind of question</label>\n                <p-dropdown id=\"questionType\" (onChange)=\"addAnsOpts($event)\" [options]=\"questionTypes\" optionLabel=\"name\" formControlName=\"type\"></p-dropdown>\n            </div>\n            <div *ngIf=\"manageAnsOpts.ansOpts.length!==0\" class=\"p-field p-col-6\">\n                <label for=\"upAnsOptButton\"> Update answer options </label>\n                <p-button id=\"upAnsOptButton\" icon=\"pi pi-pencil\" label=\"Update\" class=\"p-button-secondary\" (click)=\"updateAnsOpt()\"></p-button>\n            </div>\n            <div class=\"p-field p-col-12\">\n                <label for=\"weight\">Weight</label>\n                <p-inputNumber id=\"weight\" mode=\"decimal\" [max]=\"maxWeight\" [min]=\"0.0\" [step]=\"0.01\" [minFractionDigits]=\"1.0\" [maxFractionDigits]=\"2\" formControlName=\"weight\"></p-inputNumber>\n            </div>\n            <div class=\"p-field p-col-12\">\n                <label for=\"question-description\">Description</label>\n                <textarea id=\"question-description\" [rows]=\"4\" [autoResize]=\"true\" pInputTextarea formControlName=\"description\"></textarea>\n            </div>\n            <div *ngIf=\"creatingQuestion\" class=\"p-field p-col-12 p-md-6\">\n                <p-button [disabled]=\"questionForm.invalid\" icon=\"pi pi-check\" label=\"Add question\" class=\"p-button-secondary\" (click)=\"saveQuestion()\"></p-button>\n            </div>\n\n            <div *ngIf=\"!creatingQuestion\" class=\"p-field p-col-12 p-md-6\">\n                <p-button [disabled]=\"questionForm.invalid\" icon=\"pi pi-check\" label=\"Update question\" class=\"p-button-secondary\" (click)=\"updateQuestion()\"></p-button>\n            </div>\n\n            <div *ngIf=\"!creatingQuestion\" class=\"p-field p-col-12 p-md-6\">\n                <p-button icon=\"pi pi-times\" label=\"Cancel\" class=\"p-button-secondary\" (click)=\"cancelUpdateQuestion()\"></p-button>\n            </div>\n        </div>\n    </form>\n    <app-question-main-view [(manageAnsOpts)]=\"manageAnsOpts\" [(maxWeight)]=\"maxWeight\" [(questions)]=\"questions\" [(question)]=\"question\" [(questionForm)]=\"questionForm\" [(creatingQuestion)]=\"creatingQuestion\"></app-question-main-view>\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'examsapp';\r\n}\r\n","<router-outlet></router-outlet>","export class ProfessorDto  {\r\n\r\n    public id : number;\r\n    public identificationCard : String;\r\n    public name : String;\r\n    public lastname : String;\r\n    public email : String;\r\n    public username : String;\r\n    public password : String;\r\n\r\n    constructor () {\r\n        this.id = 1;\r\n        this.identificationCard = new String (\"\");\r\n        this.name = new String(\"\");\r\n        this.lastname = new String(\"\");\r\n        this.email = new String(\"\");\r\n        this.username = new String(\"\");\r\n        this.password = new String(\"\");\r\n    }\r\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { QuestionDto } from '../dto/abstractDto/QuestionDto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionService {\n\n  constructor(private http : HttpClient) { }\n\n  public getQuestions() : Observable<Array<QuestionDto>> {\n    return this.http.get<Array<QuestionDto>>(environment.apiURL + 'question/all');\n  }\n\n  public getQuestionByExam(examID : Number) : Observable<Array<QuestionDto>> {\n    return this.http.get<Array<QuestionDto>>(environment.apiURL + 'question/' + examID);\n  }\n\n  public getImage(fileName : string) : Observable<any> {\n    return this.http.get(environment.apiURL + 'question/getImage/?filename=' + fileName, {responseType: 'blob'});\n  }\n\n  public saveQuestion(question : QuestionDto) : Observable<QuestionDto> {\n    return this.http.post<QuestionDto>(environment.apiURL + 'question', question);\n  }\n\n  public saveImage(image : File) : Observable<string> {\n    let imageFile : FormData = new FormData();\n    imageFile.append(\"file\", image);\n    return this.http.post(environment.apiURL + 'question/saveImage', imageFile, {responseType: 'text'});\n  }\n\n  public delImage(fileName : string) : Observable<string> {\n    return this.http.delete(environment.apiURL + 'question/delImage/?filename=' + fileName, {responseType : 'text'});\n  }\n\n  public updateQuestion(question : QuestionDto) : Observable<QuestionDto> {\n    return this.http.put<QuestionDto>(environment.apiURL + 'question', question);\n  }\n\n  public delQuestion(question : QuestionDto) : Observable<String> {\n    return this.http.delete(environment.apiURL + 'question/' + question.id, {responseType : 'text'});\n  }\n}\n","import { AnswerOptionDto } from \"../dto/AnswerOptionDto\";\r\n\r\nexport class ManageAnsOpts {\r\n    \r\n    private _ansOpts: Array<AnswerOptionDto>;\r\n    private _newAnsOpts: Array<AnswerOptionDto>;\r\n    private _uptAnsOpts: Array<AnswerOptionDto>;\r\n    private _delAnsOpts: Array<AnswerOptionDto>;\r\n\r\n    constructor () {\r\n        this._ansOpts = new Array<AnswerOptionDto>();\r\n        this._newAnsOpts = new Array<AnswerOptionDto>();\r\n        this._uptAnsOpts = new Array<AnswerOptionDto>();\r\n        this._delAnsOpts = new Array<AnswerOptionDto>();\r\n    }\r\n\r\n    public resetAttributes() : void {\r\n        this._ansOpts = new Array<AnswerOptionDto>();\r\n        this._newAnsOpts = new Array<AnswerOptionDto>();\r\n        this._uptAnsOpts = new Array<AnswerOptionDto>();\r\n        this._delAnsOpts = new Array<AnswerOptionDto>();\r\n    }\r\n\r\n    public get ansOpts(): Array<AnswerOptionDto> {\r\n        return this._ansOpts;\r\n    }\r\n    public set ansOpts(value: Array<AnswerOptionDto>) {\r\n        this._ansOpts = value;\r\n    }\r\n\r\n    public get newAnsOpts(): Array<AnswerOptionDto> {\r\n        return this._newAnsOpts;\r\n    }\r\n    public set newAnsOpts(value: Array<AnswerOptionDto>) {\r\n        this._newAnsOpts = value;\r\n    }\r\n    public get uptAnsOpts(): Array<AnswerOptionDto> {\r\n        return this._uptAnsOpts;\r\n    }\r\n    public set uptAnsOpts(value: Array<AnswerOptionDto>) {\r\n        this._uptAnsOpts = value;\r\n    }\r\n    public get delAnsOpts(): Array<AnswerOptionDto> {\r\n        return this._delAnsOpts;\r\n    }\r\n    public set delAnsOpts(value: Array<AnswerOptionDto>) {\r\n        this._delAnsOpts = value;\r\n    }\r\n\r\n    private findIndicesForUnexistentUptAns(unexistentUptAnsIndices : Array<number>) : void {\r\n        let i=0;\r\n        this.uptAnsOpts.forEach( ansOpt => {\r\n            if (ansOpt.id === 0) {\r\n                unexistentUptAnsIndices.push(i);\r\n            }\r\n            i++;\r\n        });\r\n    }\r\n\r\n    private findIndicesForUnexistentDelAns(unexistentDelAnsIndices : Array<number>) : void {\r\n        let i=0;\r\n        this.delAnsOpts.forEach( ansOpt => {\r\n            if (ansOpt.id === 0) {\r\n                unexistentDelAnsIndices.push(i);\r\n            }\r\n            i++;\r\n        });\r\n    }\r\n\r\n    private addUnexistentAnsOptAsNewAnsOpt(unexistentUptAnsIndices : Array<number>) : void {\r\n        unexistentUptAnsIndices.forEach( index => {\r\n            this.newAnsOpts.push(this.uptAnsOpts[index]);\r\n            this.uptAnsOpts.splice(index, 1);\r\n        });\r\n    }\r\n\r\n    private discardUnexistentAnsOptForDeleteRequest(unexistentDelAnsIndices : Array<number>) : void {\r\n        unexistentDelAnsIndices.forEach( index => {\r\n            this.delAnsOpts.splice(index, 1);\r\n        });\r\n    }\r\n\r\n    public resolve() : void {\r\n        // all unexistent ans options mean that these don't exist into database\r\n        let unexistentUptAnsIndices = new Array<number>();\r\n        let unexistentDelAnsIndices = new Array<number>();\r\n        this.findIndicesForUnexistentUptAns(unexistentUptAnsIndices);\r\n        this.findIndicesForUnexistentDelAns(unexistentDelAnsIndices);\r\n        this.addUnexistentAnsOptAsNewAnsOpt(unexistentUptAnsIndices);\r\n        this.discardUnexistentAnsOptForDeleteRequest(unexistentDelAnsIndices);\r\n    }\r\n\r\n    public addItemIntoAnsOpts(ansOpt : AnswerOptionDto) : void {\r\n        this.ansOpts.push(ansOpt);\r\n    }\r\n\r\n    public addItemIntoNewAnsOpts(ansOpt : AnswerOptionDto) : void {\r\n        this.newAnsOpts.push(ansOpt);\r\n    }\r\n\r\n    public addItemIntoUptAnsOpts(ansOpt : AnswerOptionDto) : void {\r\n        let index = this.uptAnsOpts.indexOf(ansOpt);\r\n        if (index === -1) {\r\n            this.uptAnsOpts.push(ansOpt);\r\n        } else {\r\n            this.uptAnsOpts.splice(index, 1, ansOpt);\r\n        }\r\n\r\n        this.delDuplicates(ansOpt, this.newAnsOpts, this.delAnsOpts);\r\n    }\r\n\r\n    public addItemIntoDelAnsOpts(ansOpt : AnswerOptionDto) : void {\r\n        this.delAnsOpts.push(ansOpt);\r\n        this.delDuplicates(ansOpt, this.newAnsOpts, this.uptAnsOpts);\r\n    }\r\n\r\n    private delDuplicates(\r\n        ansOpt : AnswerOptionDto, \r\n        array1 : Array<AnswerOptionDto>, \r\n        array2 : Array<AnswerOptionDto>) : void {\r\n\r\n        let array1Index = array1.indexOf(ansOpt);\r\n        let array2Index = array2.indexOf(ansOpt);\r\n        \r\n        if (array1Index !== -1) {\r\n            array1.splice(array1Index, 1);\r\n        }\r\n        if (array2Index !== -1) {\r\n            array2.splice(array2Index, 1);\r\n        }\r\n    }\r\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { ToastModule } from 'primeng/toast'\r\nimport { ButtonModule } from 'primeng/button';;\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MenubarModule } from 'primeng/menubar';\r\nimport { SidebarModule } from 'primeng/sidebar';\r\nimport { MenuModule } from 'primeng/menu';\r\nimport { TableModule } from 'primeng/table';\r\nimport { InputNumberModule } from 'primeng/inputnumber';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\nimport { TabViewModule } from 'primeng/tabview';\r\nimport { AutoCompleteModule } from 'primeng/autocomplete';\r\nimport { ToggleButtonModule } from 'primeng/togglebutton';\r\nimport { DynamicDialogModule } from 'primeng/dynamicdialog';\r\nimport { OrderListModule } from 'primeng/orderlist';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\n\r\nimport { PageNotFoundComponent } from './Componentes/page-not-found/page-not-found.component';\r\nimport { CreateProfessorComponent } from './Componentes/create-professor/create-professor.component';\r\nimport { ProfessorMainViewComponent } from './Componentes/professor-main-view/professor-main-view.component';\r\nimport { ProfessorInteractionComponent } from './Componentes/professor-interaction/professor-interaction.component';\r\nimport { ExamMainViewComponent } from './Componentes/exam-main-view/exam-main-view.component';\r\nimport { ExamFormComponent } from './Componentes/exam-form/exam-form.component';\r\nimport { QuestionFormComponent } from './Componentes/question-form/question-form.component';\r\nimport { QuestionMainViewComponent } from './Componentes/question-main-view/question-main-view.component';\r\nimport { ManageExamComponent } from './Componentes/manage-exam/manage-exam.component';\r\nimport { AnswerOptionFormComponent } from './Componentes/answer-option-form/answer-option-form.component';\r\nimport { AnswerOptionMainViewComponent } from './Componentes/answer-option-main-view/answer-option-main-view.component';\r\nimport { correctAnswerPipe } from './pipes/correctAns';\r\nimport { ExamDetailsViewComponent } from './Componentes/exam-details-view/exam-details-view.component';\r\nimport { StudentFormComponent } from './Componentes/student-form/student-form.component';\r\nimport { QuestionTypePipe } from './pipes/question-type.pipe';\r\nimport { SolveExamComponent } from './Componentes/solve-exam/solve-exam.component';\r\nimport { ExamGradeMainViewComponent } from './Componentes/exam-grade-main-view/exam-grade-main-view.component';\r\nimport { ExamStudentsResponsesComponent } from './Componentes/exam-students-responses/exam-students-responses.component';\r\nimport { ExamStudentResponseDetailComponent } from './Componentes/exam-student-response-detail/exam-student-response-detail.component';\r\nimport { ExamStudenOpenResponseComponent } from './Componentes/exam-studen-open-response/exam-studen-open-response.component';\r\nimport { ExamStudenSelectedResponseComponent } from './Componentes/exam-studen-selected-response/exam-studen-selected-response.component';\nimport { AnsOptsDetailsComponent } from './Componentes/ans-opts-details/ans-opts-details.component';\nimport { WeightPipe } from './pipes/weight.pipe';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    correctAnswerPipe,\r\n    AppComponent,\r\n    PageNotFoundComponent,\r\n    CreateProfessorComponent,\r\n    ProfessorMainViewComponent,\r\n    ExamFormComponent,\r\n    ProfessorInteractionComponent,\r\n    ExamMainViewComponent,\r\n    QuestionFormComponent,\r\n    QuestionMainViewComponent,\r\n    ManageExamComponent,\r\n    AnswerOptionFormComponent,\r\n    AnswerOptionMainViewComponent,\r\n    ExamDetailsViewComponent,\r\n    StudentFormComponent,\r\n    QuestionTypePipe,\r\n    SolveExamComponent,\r\n    ExamGradeMainViewComponent,\r\n    ExamStudentsResponsesComponent,\r\n    ExamStudentResponseDetailComponent,\r\n    ExamStudenOpenResponseComponent,\r\n    ExamStudenSelectedResponseComponent,\r\n    AnsOptsDetailsComponent,\r\n    WeightPipe\r\n  ],\r\n  imports: [\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    ButtonModule,\r\n    ToastModule,\r\n    AppRoutingModule,\r\n    MenubarModule,\r\n    SidebarModule,\r\n    MenuModule,\r\n    TableModule,\r\n    InputNumberModule,\r\n    InputTextModule,\r\n    InputTextareaModule,\r\n    TabViewModule,\r\n    AutoCompleteModule,\r\n    ToggleButtonModule,\r\n    DynamicDialogModule,\r\n    OrderListModule,\r\n    DropdownModule,\r\n    RadioButtonModule,\r\n    CheckboxModule,\r\n    ConfirmDialogModule\r\n  ],\r\n  entryComponents: [ExamDetailsViewComponent],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { ExamDto } from 'src/app/dto/ExamDto';\nimport { ProfessorDto } from 'src/app/dto/ProfessorDto';\nimport { ExamService } from 'src/app/services/exam.service';\nimport { ProfessorService } from 'src/app/services/Professor.service';\nimport CryptoES from 'crypto-es';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-exam-form',\n  templateUrl: './exam-form.component.html',\n  styleUrls: ['./exam-form.component.css'],\n  providers: [MessageService]\n})\nexport class ExamFormComponent implements OnInit {\n\n  @Input() public exams : Array<ExamDto>;\n  @Output() public examsChange : any;\n\n  public examForm : FormGroup;\n  public exam : ExamDto;\n\n  public professor : ProfessorDto;\n  public creatingExam : boolean;\n\n  constructor(\n    private formBuilder : FormBuilder,\n    private examService : ExamService,\n    private professorService : ProfessorService,\n    private messageService : MessageService\n    ) {\n      this.exams = new Array<ExamDto>();\n      this.examsChange = new EventEmitter<Array<ExamDto>>();\n      this.creatingExam = true;\n      this.exam = new ExamDto;\n      this.examForm = this.formBuilder.group({ \n        name : new FormControl('', [Validators.required, Validators.maxLength(100)]),\n        durability : new FormControl(0, [Validators.required, Validators.min(1), Validators.max(7200)]),\n        maxGrade : new FormControl(0.0, [Validators.required, Validators.min(0.0), Validators.max(5.0)]),\n        description : new FormControl('', [Validators.required, Validators.min(1), Validators.max(1024)])}\n      );\n      this.professor = new ProfessorDto;\n    }\n  \n\n  ngOnInit(): void { \n      //This code should no be here\n      this.setProfessor();\n  }\n\n  private setProfessor() : void {\n    this.professorService.getByUsername(\"professor\").subscribe( \n      response => {\n        this.professor = response;\n        this.setExams();\n      },\n      error => console.log(error)\n    );\n  }\n\n  private setExams() : void {\n    this.examService.getExamByProfessor(this.professor.id).subscribe(\n      response => {\n        this.exams = response;\n        this.examsChange.emit(this.exams);\n      },\n      error => console.log(error)\n    );\n  }\n\n  private resetExamForm() : void {\n    this.examForm.reset({\n      name : '',\n      durability : 0,\n      maxGrade : 0.0,\n      description : ''\n    });\n  }\n\n  private generateExamLink() : string {\n    let currentDate = new Date();\n    return environment.urlExams + CryptoES.SHA256(currentDate.toString());;\n  }\n\n  private extractExamInfoFromExamForm() : void {\n    let examForm : ExamDto = <ExamDto> this.examForm.value;\n    this.exam.name = examForm.name;\n    this.exam.durability = examForm.durability;\n    this.exam.maxGrade = examForm.maxGrade;\n    this.exam.description = examForm.description;\n  }\n\n  public saveExam() : void {\n    this.exam.id = 0;\n    this.extractExamInfoFromExamForm();\n    this.exam.link = this.generateExamLink();\n    this.exam.professor = this.professor;\n\n    this.examService.saveExam(this.exam).subscribe(\n      response => {\n        this.messageService.add({severity:'success', summary:'Success', detail:'Exam \\\"' + response.name + '\\\" created successfully'});\n        this.exams.push(response);\n        this.examsChange.emit(this.exams);\n      },\n      error => {\n        console.log(error);\n        this.messageService.add({severity:'error', summary:error.status, detail:'Error', sticky : true});\n    });\n\n    this.resetExamForm();\n  }\n  \n  public updateExam() : void {\n    this.extractExamInfoFromExamForm();\n\n    this.examService.updateExam(this.exam).subscribe(\n      response => {\n        this.messageService.add({severity:'success', summary:'Success', detail:'Exam \\\"' + this.exam.name + '\\\" updated successfully'});\n        let index = this.exams.findIndex( (e) => e.id === response.id );\n        this.exams.splice(index, 1, response);\n        this.examsChange.emit(this.exams);\n      },\n      error => {\n        console.log(error);\n        this.messageService.add({severity:'error', summary:error.status, detail:'Error', sticky : true});\n      }\n    );\n\n    this.resetExamForm();\n    this.creatingExam = true;\n  }\n\n  public cancelNewExam() : void {\n    this.resetExamForm();\n  }\n\n  public cancelUpdateExam() : void {\n    this.resetExamForm();\n    this.creatingExam = true;\n  }\n\n}","<p-toast></p-toast>\r\n<form [formGroup]=\"examForm\">\r\n    <div class=\"p-fluid p-formgrid p-grid\">\r\n        <div class=\"p-field p-col-12 p-md-6\">\r\n            <label for=\"name\">Name</label>\r\n            <input id=\"name\" type=\"text\" pInputText formControlName=\"name\"> \r\n        </div>\r\n        <div class=\"p-field p-col-12 p-md-6\">\r\n            <label for=\"durability\">Durability (seconds)</label>\r\n            <input id=\"durability\" type=\"text\" pInputText formControlName=\"durability\"> \r\n        </div>\r\n        <div class=\"p-field p-col-12\">\r\n            <label for=\"maxGrade\">Max grade</label>\r\n            <p-inputNumber id=\"maxGrade\" mode=\"decimal\" [max]=\"5\" [min]=\"0\" [step]=\"0.01\" [minFractionDigits]=\"1\" [maxFractionDigits]=\"2\" formControlName=\"maxGrade\"></p-inputNumber>\r\n        </div>\r\n        <div class=\"p-field p-col-12\">\r\n            <label for=\"description\">Description</label>\r\n            <textarea id=\"description\" [rows]=\"4\" [autoResize]=\"true\" pInputTextarea formControlName=\"description\"></textarea>\r\n        </div>    \r\n        <div *ngIf=\"creatingExam\" class=\"p-field p-col-12 p-md-6\">\r\n            <p-button [disabled]=\"examForm.invalid\" icon=\"pi pi-check\" label=\"Create exam\" class=\"p-button-secondary\" (click)=\"saveExam()\"></p-button>\r\n        </div>\r\n        <div *ngIf=\"creatingExam && examForm.touched\" class=\"p-field p-col-12 p-md-6\">\r\n            <p-button icon=\"pi pi-times\" label=\"Cancel\" class=\"p-button-secondary\" (click)=\"cancelNewExam()\"></p-button>\r\n        </div>\r\n        <div *ngIf=\"!creatingExam\" class=\"p-field p-col-12 p-md-6\">\r\n            <p-button [disabled]=\"examForm.invalid\" icon=\"pi pi-pencil\" label=\"Update exam\" class=\"p-button-secondary\" (click)=\"updateExam()\"></p-button>\r\n        </div>\r\n        <div *ngIf=\"!creatingExam\" class=\"p-field p-col-12 p-md-6\">\r\n            <p-button icon=\"pi pi-times\" label=\"Cancel\" class=\"p-button-secondary\" (click)=\"cancelUpdateExam()\"></p-button>\r\n        </div>\r\n    </div>\r\n</form>\r\n<app-exam-main-view [(examForm)]=\"examForm\" [(creatingExam)]=\"creatingExam\" [(exam)]=\"exam\" [(exams)]=\"exams\"></app-exam-main-view>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { MenuItem } from 'primeng/api';\n\n@Component({\n  selector: 'app-professor-interaction',\n  templateUrl: './professor-interaction.component.html',\n  styleUrls: ['./professor-interaction.component.css']\n})\nexport class ProfessorInteractionComponent implements OnInit {\n\n  @Input() public display : boolean;\n  @Output() public tellAboutDisplay : any;\n\n  items: MenuItem[];\n\n  constructor() { \n    this.display = false;\n\n    this.tellAboutDisplay = new EventEmitter<Boolean>();\n    this.items = [\n      {label: 'Manage exam', icon: 'pi pi-book', \n        command: (event) => {\n          this.display = false;\n          this.emitDisplay();\n        }  ,\n        routerLink: ['./manage-exam-view']\n      },\n      {label: 'Grades', icon: 'pi pi-star', \n        command: (event) => {\n          this.display = false;\n          this.emitDisplay();\n        }  ,\n        routerLink: ['./exam-grade-main-view']\n      },\n      {label: 'Account', icon: 'pi pi-user-edit',\n        command: (event) => {\n          this.display = false;\n          this.emitDisplay();\n        }  \n      }\n  ];\n  }\n\n\n  ngOnInit(): void {\n\n  }\n\n  public emitDisplay () : void  {\n    this.display = false;\n    this.tellAboutDisplay.emit(this.display);\n  }\n}\n","<div>\n    <p-sidebar [(visible)]=\"display\" position=\"left\" [modal]=\"false\" (onHide)=\"emitDisplay()\">\n        <p-menu [model]=\"items\"></p-menu>\n    </p-sidebar>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Error 404</h1>\n<h2>Page not found</h2>\n","import { ExamStudentDto } from './ExamStudentDto';\r\nimport { AnswerOptionDto } from './AnswerOptionDto';\r\n\r\nexport class SelectedResponseDto  {\r\n    \r\n    public id : number;\r\n    public valoration : number;\r\n    public examStudent : ExamStudentDto;\r\n    public answerOption : AnswerOptionDto;\r\n\r\n    constructor() {\r\n        this.id = 0;\r\n        this.valoration = 0.0;\r\n        this.examStudent = new ExamStudentDto;\r\n        this.answerOption = new AnswerOptionDto;\r\n    }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'questionType'\n})\nexport class QuestionTypePipe implements PipeTransform {\n\n  transform(questionCode : string): string {\n    let name : string;\n    \n    if (questionCode === \"op\") {\n      name = \"Open question\";\n    }\n    else if (questionCode === \"mu\") {\n      name = \"Multiple unique\"\n    }\n    else if (questionCode === \"mm\") {\n      name = \"Multiple multiple\";\n    }\n    else {\n      name = \"Unknown code\";\n    }\n\n    return name;\n  }\n\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { DialogService } from 'primeng/dynamicdialog';\nimport { ExamDto } from 'src/app/dto/ExamDto';\nimport { ExamService } from 'src/app/services/exam.service';\nimport { ExamDetailsViewComponent } from '../exam-details-view/exam-details-view.component';\n\n@Component({\n  selector: 'app-exam-main-view',\n  templateUrl: './exam-main-view.component.html',\n  styleUrls: ['./exam-main-view.component.css'],\n  providers: [MessageService, DialogService]\n})\nexport class ExamMainViewComponent implements OnInit {\n\n  @Input() public exams : Array<ExamDto>;\n  @Output() public examsChange : any;\n\n  @Input() public exam : ExamDto;\n  @Output() public examChange : any;\n  \n  @Input() public creatingExam : boolean;\n  @Output() public creatingExamChange : any;\n\n  @Input() public examForm : FormGroup;\n  @Output() public examFormChange : any;\n\n  constructor( \n    private examService : ExamService,\n    private messageService : MessageService,\n    private dialogService : DialogService\n  ) { \n    this.exam = new ExamDto;\n    this.creatingExam = true;\n    this.exams = new Array<ExamDto>();\n    this.examChange = new EventEmitter<ExamDto>();\n    this.examForm = new FormGroup({});\n\n    this.examsChange = new EventEmitter<Array<ExamDto>>();\n    this.examFormChange = new EventEmitter<FormGroup>();\n    this.creatingExamChange = new EventEmitter<boolean>();\n  }\n\n  ngOnInit(): void { }\n\n  private putExamInfoIntoExamForm(exam : ExamDto) : void {\n    this.examForm.setValue({\n      name : exam.name,\n      durability : exam.durability,\n      maxGrade : exam.maxGrade,\n      description : exam.description\n    });\n    this.examFormChange.emit(this.examForm); \n  }\n\n  public editExam(exam : ExamDto) : void {\n    this.creatingExam = false;\n    this.creatingExamChange.emit(this.creatingExam);\n    this.exam = exam;\n    this.examChange.emit(this.exam);\n    this.putExamInfoIntoExamForm(exam);\n  }\n\n  public delExam(exam : ExamDto) : void {\n    this.examService.delExam(exam).subscribe(\n      response => {\n        this.messageService.add({severity:'success', summary:'Success', detail:response.toString()});\n        this.exams.splice(this.exams.indexOf(exam), 1);\n        this.examsChange.emit(this.exams);\n      },\n      error => console.log(error)\n    );\n  }\n\n  public showExam(exam : ExamDto) : void {\n    this.dialogService.open(ExamDetailsViewComponent, {\n      data : exam,\n      header: 'Exam ' + exam.name + ' details',\n      width: '70%'\n  });\n  }\n\n}\n","<p-toast></p-toast>\n<p-table [value]=\"exams\" [paginator]=\"true\" [rows]=\"10\" sortMode=\"multiple\">\n    <ng-template pTemplate=\"header\">\n        <tr>\n            <th>Name</th>\n            <th>Durability</th>\n            <th>Max grade</th>\n            <th>Actions</th>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-exam>\n        <tr>\n            <td>{{exam.name}}</td>\n            <td>{{exam.durability}}</td>\n            <td>{{exam.maxGrade | weight}}</td>\n            <td>\n                <button [disabled]=\"!creatingExam\" pButton type=\"button\" icon=\"pi pi-pencil\" class=\"p-button-text\" (click)=\"editExam(exam)\"></button>\n                <button [disabled]=\"!creatingExam\" pButton type=\"button\" icon=\"pi pi-trash\" class=\"p-button-text\" (click)=\"delExam(exam)\"></button>\n                <button [disabled]=\"!creatingExam\" pButton type=\"button\" icon=\"pi pi-eye\" class=\"p-button-text\" (click)=\"showExam(exam)\"></button>\n            </td>\n        </tr>\n    </ng-template>\n</p-table>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MessageService } from 'primeng/api';\r\nimport { DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\r\nimport { QuestionDto } from 'src/app/dto/abstractDto/QuestionDto';\r\nimport { AnswerOptionDto } from 'src/app/dto/AnswerOptionDto';\r\nimport { AnswerOptionService } from 'src/app/services/answer-option.service';\r\nimport { ManageAnsOpts } from 'src/app/tools/manageAnsOpts';\r\n\r\n@Component({\r\n  selector: 'app-answer-option-form',\r\n  templateUrl: './answer-option-form.component.html',\r\n  styleUrls: ['./answer-option-form.component.css'],\r\n  providers: [ MessageService ]\r\n})\r\nexport class AnswerOptionFormComponent implements OnInit {\r\n\r\n  public creatingAnsOpt : boolean;\r\n  public ansOpt : AnswerOptionDto;\r\n  public ansOptForm : FormGroup;\r\n  public question : QuestionDto;\r\n  public maxWeight : number;\r\n  public manageAnsOpts : ManageAnsOpts;\r\n\r\n  constructor(\r\n    private formBuilder : FormBuilder,\r\n    private ansOptService : AnswerOptionService,\r\n    private config: DynamicDialogConfig,\r\n    private ref : DynamicDialogRef,\r\n    private messageService : MessageService\r\n  ) {\r\n    this.manageAnsOpts = this.config.data.manageAnsOpts;\r\n    this.question = this.config.data.question;\r\n\r\n    this.ansOptForm = this.formBuilder.group({\r\n      weight : new FormControl (0.0, [Validators.required, Validators.min(0.0), Validators.max(5.0)]),\r\n      correctAnswer : new FormControl (true, [Validators.required]),\r\n      description : new FormControl ('', [Validators.required, Validators.min(1), Validators.max(2048)])\r\n    });\r\n\r\n    this.ansOpt = new AnswerOptionDto;\r\n    this.creatingAnsOpt = true;\r\n    this.maxWeight = 1;\r\n    \r\n    if (this.manageAnsOpts.ansOpts.length) {\r\n      this.calculateMaxAvailableGrade();\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    /*(this.question.id !== 0) ? this.setAnsOpts() : false;*/\r\n  }\r\n\r\n  private subMaxWeight(ansOpt : AnswerOptionDto) : void {\r\n    this.maxWeight -= ansOpt.weight;\r\n    this.maxWeight = Number (this.maxWeight.toPrecision(2));\r\n  }\r\n\r\n  private calculateMaxAvailableGrade() : void {\r\n    let maxWeight : number = 1;\r\n    this.manageAnsOpts.ansOpts.forEach( ansOpt => {\r\n      maxWeight -= ansOpt.weight;\r\n      maxWeight = Number (maxWeight.toPrecision(2));\r\n    });\r\n    this.maxWeight = maxWeight;\r\n  }\r\n\r\n  /*\r\n  public setAnsOpts() : void {\r\n    this.ansOptService.getAnsOptByQuestion(this.question.id).subscribe(\r\n      ansOpts => {\r\n        this.ansOpts = ansOpts;\r\n        this.manageAnsOpts.ansOpts = this.ansOpts;\r\n        this.manageAnsOpts.ansOptsCopy = this.ansOpts;\r\n        this.calculateMaxAvailableGrade();\r\n      },\r\n      error => console.log(error)\r\n    );\r\n  }\r\n*/\r\n  private resetAnsOptForm() : void {\r\n    this.ansOptForm.reset({\r\n      weight : 0.0,\r\n      correctAnswer : true,\r\n      description : ''\r\n    })\r\n  }\r\n\r\n  private extractAnsOptInfoFromAnsOptForm(ansOpt : AnswerOptionDto) : void {\r\n    let ansOptionForm = <AnswerOptionDto> this.ansOptForm.value;\r\n    ansOpt.weight = ansOptionForm.weight;\r\n    ansOpt.correctAnswer = ansOptionForm.correctAnswer;\r\n    ansOpt.description = ansOptionForm.description;\r\n  }\r\n\r\n  public saveAnsOpt() : void {\r\n    let ansOpt = new AnswerOptionDto;\r\n    this.extractAnsOptInfoFromAnsOptForm(ansOpt);\r\n    ansOpt.question = this.question;\r\n    this.subMaxWeight(ansOpt);\r\n    this.manageAnsOpts.ansOpts.push(ansOpt);\r\n    this.manageAnsOpts.addItemIntoNewAnsOpts(ansOpt);\r\n    this.resetAnsOptForm();\r\n  }\r\n\r\n  public cancelNewAnsOpt() : void {\r\n    this.resetAnsOptForm();\r\n  }\r\n\r\n  public updateAnsOpt() : void {\r\n    this.extractAnsOptInfoFromAnsOptForm(this.ansOpt);\r\n    let index = this.manageAnsOpts.ansOpts.indexOf(this.ansOpt);\r\n    this.manageAnsOpts.ansOpts.splice(index, 1, this.ansOpt);\r\n    this.manageAnsOpts.addItemIntoUptAnsOpts(this.ansOpt);\r\n    this.creatingAnsOpt = true;\r\n    this.calculateMaxAvailableGrade();\r\n    this.resetAnsOptForm();\r\n  }\r\n\r\n  public cancelUpdateAnsOpt() : void {\r\n    this.creatingAnsOpt = true;\r\n    this.subMaxWeight(this.ansOpt);\r\n    this.resetAnsOptForm();\r\n  }\r\n\r\n  private notValidAnsOpts() : boolean {\r\n\r\n    // answer options should not be emtpy\r\n    if (!(this.manageAnsOpts.ansOpts.length > 0)) {\r\n      this.messageService.add({sticky:true, severity:'warn', summary:'Warning', detail:'Answer options cannot be empty!'});\r\n      return true;\r\n    }\r\n\r\n    let atLeastIsThereACorrectAns = false;\r\n    let isThereWeightInNotCorrectAns = false;\r\n    let isThereACorrectAnsOptWithoutWeight = false;\r\n    let multipleUniqueQuestionNumOfCorrecAnsOpts = 0;\r\n    let consideredWeight = 0.0;\r\n\r\n    this.manageAnsOpts.ansOpts.forEach( ansOpt => {\r\n\r\n      // check if a not correct answer has a weight\r\n      if (ansOpt.correctAnswer && ansOpt.weight === 0) {\r\n        isThereACorrectAnsOptWithoutWeight = true;\r\n      }\r\n\r\n      // check if multiple unique question only has a correct answer\r\n      if (this.question.type === \"mu\" && ansOpt.correctAnswer) {\r\n        multipleUniqueQuestionNumOfCorrecAnsOpts += 1;\r\n      }\r\n\r\n      // check if is not there at least one correct answer\r\n      // check if 100 percent weights have been considered with all correct answer\r\n      if (ansOpt.correctAnswer) {\r\n        atLeastIsThereACorrectAns = true;\r\n        consideredWeight += ansOpt.weight;\r\n        consideredWeight = Number(consideredWeight.toPrecision(2));\r\n      }\r\n\r\n      // check if a no correct answer has a weight\r\n      if (!ansOpt.correctAnswer && ansOpt.weight !== 0) {\r\n        isThereWeightInNotCorrectAns = true;\r\n      }\r\n\r\n    });\r\n    \r\n    let isAllOk = true;\r\n    if (!atLeastIsThereACorrectAns) {\r\n      this.messageService.add({sticky:true, severity:'warn', summary:'Warning', detail:'There should be at least one correct answer!'});\r\n      isAllOk = false;\r\n    }\r\n\r\n    if (isThereACorrectAnsOptWithoutWeight) {\r\n      this.messageService.add({sticky:true, severity:'warn', summary:'Warning', detail:'A correct answer option should has a weight!'});\r\n      isAllOk = false;\r\n    }\r\n\r\n    if (this.question.type === \"mu\" && multipleUniqueQuestionNumOfCorrecAnsOpts != 1) {\r\n      this.messageService.add({sticky:true, severity:'warn', summary:'Warning', detail:'Multiple unique question should has only one correct answer!'});\r\n      isAllOk = false;\r\n    }\r\n\r\n    if (isThereWeightInNotCorrectAns) {\r\n      this.messageService.add({sticky:true, severity:'warn', summary:'Warning', detail:'There should not be weight in a not correct answer!'});\r\n      isAllOk = false;\r\n    }\r\n\r\n    if (consideredWeight !== 1) {\r\n      this.messageService.add({sticky:true, severity:'warn', summary:'Warning', detail:'You should consider use 100 percent in weight for every correct answer option!'});\r\n      isAllOk = false;\r\n    }\r\n\r\n    if (isAllOk) {\r\n      return false;\r\n    }\r\n    else {\r\n      return true;\r\n    }\r\n    \r\n  }\r\n\r\n  public accept() : void {\r\n    if (this.notValidAnsOpts()) {\r\n      return;\r\n    }\r\n    this.ref.close(this.manageAnsOpts);\r\n  }\r\n\r\n  public cancel() : void {\r\n    this.ref.close();\r\n  }\r\n}\r\n","<p-toast></p-toast>\r\n\r\n<div class=\"p-fluid p-formgrid p-grid\">\r\n    <div class=\"p-field p-col-12\">\r\n        <b>Kind of question: </b> {{question.type | questionType}}\r\n    </div>\r\n</div>\r\n    \r\n<form [formGroup]=\"ansOptForm\">\r\n    <div class=\"p-fluid p-formgrid p-grid\">\r\n\r\n        <div class=\"p-field p-col-12\">\r\n            <label for=\"ans-opt-weight\">Weight</label>\r\n            <p-inputNumber id=\"ans-opt-weight\" mode=\"decimal\" [max]=\"maxWeight\" [min]=\"0\" [step]=\"0.01\" [minFractionDigits]=\"1\" [maxFractionDigits]=\"2\" formControlName=\"weight\"></p-inputNumber>\r\n        </div>\r\n        <div class=\"p-field p-col-12 p-md-6\">\r\n            <label for=\"correct-answer\">Correct answer</label>\r\n            <p-toggleButton onLabel=\"Yes\" offLabel=\"No\" formControlName=\"correctAnswer\"></p-toggleButton> \r\n        </div>\r\n        <div class=\"p-field p-col-12\">\r\n            <label for=\"ans-opt-description\">Description</label>\r\n            <textarea id=\"ans-opt-description\" [rows]=\"4\" [autoResize]=\"true\" pInputTextarea formControlName=\"description\"></textarea>\r\n        </div>    \r\n        <div *ngIf=\"creatingAnsOpt\" class=\"p-field p-col-12 p-md-6\">\r\n            <p-button [disabled]=\"ansOptForm.invalid\" icon=\"pi pi-check\" label=\"Create answer\" class=\"p-button-secondary\" (click)=\"saveAnsOpt()\"></p-button>\r\n        </div>\r\n        <div *ngIf=\"creatingAnsOpt && ansOptForm.touched\" class=\"p-field p-col-12 p-md-6\">\r\n            <p-button icon=\"pi pi-times\" label=\"Cancel\" class=\"p-button-secondary\" (click)=\"cancelNewAnsOpt()\"></p-button>\r\n        </div>\r\n        <div *ngIf=\"!creatingAnsOpt\" class=\"p-field p-col-12 p-md-6\">\r\n            <p-button [disabled]=\"ansOptForm.invalid\" icon=\"pi pi-pencil\" label=\"Update answer\" class=\"p-button-secondary\" (click)=\"updateAnsOpt()\"></p-button>\r\n        </div>\r\n        <div *ngIf=\"!creatingAnsOpt\" class=\"p-field p-col-12 p-md-6\">\r\n            <p-button icon=\"pi pi-times\" label=\"Cancel\" class=\"p-button-secondary\" (click)=\"cancelUpdateAnsOpt()\"></p-button>\r\n        </div>\r\n    </div>\r\n</form>\r\n\r\n<app-answer-option-main-view [(maxWeight)]=\"maxWeight\" [(creatingAnsOpt)]=\"creatingAnsOpt\" [(manageAnsOpts)]=\"manageAnsOpts\" [(ansOpt)]=\"ansOpt\" [(ansOptForm)]=\"ansOptForm\"></app-answer-option-main-view>\r\n\r\n<div class=\"p-fluid p-formgrid p-grid\">\r\n    <div class=\"p-field p-col-6\">\r\n        <p-button icon=\"pi pi-times\" label=\"Accept\" class=\"p-button-secondary\" (click)=\"accept()\"></p-button>\r\n    </div>\r\n    <div class=\"p-field p-col-6\">\r\n        <p-button icon=\"pi pi-times\" label=\"Cancel\" class=\"p-button-secondary\" (click)=\"cancel()\"></p-button>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ExamDto } from 'src/app/dto/ExamDto';\n\n@Component({\n  selector: 'app-manage-exam',\n  templateUrl: './manage-exam.component.html',\n  styleUrls: ['./manage-exam.component.css']\n})\nexport class ManageExamComponent implements OnInit {\n\n  public exams : Array<ExamDto>;\n  \n  constructor() {\n    this.exams = new Array<ExamDto>();\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p-tabView>\n    <p-tabPanel header=\"Manage exam\">\n        <app-exam-form [(exams)]=\"exams\"></app-exam-form>\n    </p-tabPanel>\n\n    <p-tabPanel header=\"Manage questions\">\n        <app-question-form [exams]=\"exams\"> </app-question-form>\n    </p-tabPanel>\n</p-tabView>","import { QuestionDto } from './abstractDto/QuestionDto';\r\nimport { SelectedResponseDto } from './SelectedResponseDto';\r\n\r\nexport class AnswerOptionDto  {\r\n    public id : number;\r\n    public description : String;\r\n    public correctAnswer : Boolean;\r\n    public weight : number;\r\n    public question : QuestionDto | undefined;\r\n\r\n    constructor() {\r\n        this.id = 0;\r\n        this.description = new String;\r\n        this.correctAnswer = new Boolean;\r\n        this.weight = 0.0;\r\n    }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { DialogService } from 'primeng/dynamicdialog';\nimport { QuestionDto } from 'src/app/dto/abstractDto/QuestionDto';\nimport { ExamStudentDto } from 'src/app/dto/ExamStudentDto';\nimport { ExamStudentService } from 'src/app/services/exam-student.service';\nimport { QuestionService } from 'src/app/services/question.service';\nimport { ExamStudenOpenResponseComponent } from '../exam-studen-open-response/exam-studen-open-response.component';\nimport { ExamStudenSelectedResponseComponent } from '../exam-studen-selected-response/exam-studen-selected-response.component';\n\n@Component({\n  selector: 'app-exam-student-response-detail',\n  templateUrl: './exam-student-response-detail.component.html',\n  styleUrls: ['./exam-student-response-detail.component.css'],\n  providers: [DialogService]\n})\nexport class ExamStudentResponseDetailComponent implements OnInit {\n\n  public examStudent : ExamStudentDto;\n  public questions : Array<QuestionDto>;\n\n  constructor(\n    private activatedRoute : ActivatedRoute,\n    private examStudentService : ExamStudentService,\n    private questionService : QuestionService,\n    public dialogService : DialogService  \n    ) { \n    this.examStudent = new ExamStudentDto;\n    this.questions = new Array<QuestionDto>();\n  }\n\n  ngOnInit(): void {\n    this.activatedRoute.paramMap.subscribe(\n      param => {\n        this.getExamStudent(Number(param.get('examStudentId')));\n      }\n    );\n  }\n\n  private getExamStudent(examStudentId : number) : void {\n    this.examStudentService.getExamStudent(examStudentId).subscribe(\n      examStudent => {\n        this.examStudent = examStudent;\n        this.getQuestions(this.examStudent.exam.id);\n      },\n      error => console.log(error)\n    );\n  }\n\n  private getQuestions(examId : number) : void {\n    this.questionService.getQuestionByExam(examId).subscribe(\n      questions => this.questions = questions,\n      error => console.log(error)\n    )\n  }\n\n  public showStudentResponse(selectedQuestion : QuestionDto) : void {\n    // Open question\n    if (selectedQuestion.type === 'op') {\n      let ref = this.dialogService.open(ExamStudenOpenResponseComponent, {\n        data : {selectedQuestion : selectedQuestion, examStudent : this.examStudent},\n        header: 'Student open response details',\n        width: '70%'\n      });\n\n      ref.onClose.subscribe((examStudent: ExamStudentDto) => {\n        if (examStudent) {\n          this.examStudent = examStudent;\n        }\n      });\n    }\n    // Multiple unique question\n    else if (selectedQuestion.type === 'mu') {\n      this.dialogService.open(ExamStudenSelectedResponseComponent, {\n        data : {selectedQuestion : selectedQuestion, examStudent : this.examStudent},\n        header: 'Student unique selected response details',\n        width: '70%'\n      });\n    }\n    // Multiple multiple questiond\n    else {\n      this.dialogService.open(ExamStudenSelectedResponseComponent, {\n        data : {selectedQuestion : selectedQuestion, examStudent : this.examStudent},\n        header: 'Student multiple selected response details',\n        width: '70%'\n      });\n    }\n  }\n}\n","<ul>\r\n    <li> <b>Student: </b> {{examStudent.student.name}} {{examStudent.student.lastname}} </li>\r\n    <li> <b>Identification card: </b> {{examStudent.student.identificationCard}} </li>\r\n    <li> <b>Definitive grade: </b> {{examStudent.definitiveGrade}} </li>\r\n</ul>\r\n\r\n<p-table [value]=\"questions\" [paginator]=\"true\" [rows]=\"10\">\r\n    \r\n    <ng-template pTemplate=\"caption\">\r\n        <div class=\"table-header\">\r\n            Student responses\r\n        </div>\r\n    </ng-template>\r\n\r\n    <ng-template pTemplate=\"header\">\r\n        <tr>\r\n            <th pSortableColumn=\"identificationCard\">Description <p-sortIcon field=\"identificationCard\"></p-sortIcon></th>\r\n            <th pSortableColumn=\"name\">Weight <p-sortIcon field=\"name\"></p-sortIcon></th>\r\n            <th pSortableColumn=\"lastname\">Kind of question <p-sortIcon field=\"lastname\"></p-sortIcon></th>\r\n            <th>Actions</th>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-question>\r\n        <tr>\r\n            <td>{{question.description}}</td>\r\n            <td>{{question.weight}}</td>\r\n            <td>{{question.type | questionType}}</td>\r\n            <td>\r\n                <button pButton type=\"button\" icon=\"pi pi-eye\" class=\"p-button-text\" (click)=\"showStudentResponse(question)\"></button>\r\n            </td>\r\n        </tr>\r\n    </ng-template>\r\n</p-table>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { OpenResponseDto } from '../dto/OpenResponseDto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OpenResponseService {\n  constructor(private http : HttpClient) { }\n\n  public getQuestions() : Observable<Array<OpenResponseDto>> {\n    return this.http.get<Array<OpenResponseDto>>(environment.apiURL + 'openResponse/all');\n  }\n\n  public getOpenResponsesByExamStudentAndQuestion(examStudentId : number, questionId : number,) : Observable<OpenResponseDto> {\n    return this.http.get<OpenResponseDto>(environment.apiURL + \n      'openResponse/byexamstudentandquestion/?examStudentId=' + examStudentId + '&questionId=' + questionId);\n  }\n\n  public saveOpenResponse(openResponse : OpenResponseDto) : Observable<OpenResponseDto> {\n    return this.http.post<OpenResponseDto>(environment.apiURL + 'openResponse', openResponse);\n  }\n\n  public updateOpenResponse(openResponse : OpenResponseDto) : Observable<OpenResponseDto> {\n    return this.http.put<OpenResponseDto>(environment.apiURL + 'openResponse', openResponse);\n  }\n\n  public delOpenResponse(openResponse : OpenResponseDto) : Observable<String> {\n    return this.http.delete(environment.apiURL + 'openResponse/' + openResponse.id, {responseType : 'text'});\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { DialogService, DynamicDialogConfig } from 'primeng/dynamicdialog';\nimport { QuestionDto } from 'src/app/dto/abstractDto/QuestionDto';\nimport { AnswerOptionDto } from 'src/app/dto/AnswerOptionDto';\nimport { ExamDto } from 'src/app/dto/ExamDto';\nimport { AnswerOptionService } from 'src/app/services/answer-option.service';\nimport { QuestionService } from 'src/app/services/question.service';\nimport { AnsOptsDetailsComponent } from '../ans-opts-details/ans-opts-details.component';\n\n@Component({\n  selector: 'app-exam-details-view',\n  templateUrl: './exam-details-view.component.html',\n  styleUrls: ['./exam-details-view.component.css'],\n  providers: [DialogService]\n})\nexport class ExamDetailsViewComponent implements OnInit {\n\n  public exam : ExamDto;\n  public questions : Array<QuestionDto>;\n  public ansOpts  : Array<AnswerOptionDto>;\n\n  constructor(\n    private questionService : QuestionService,\n    private ansOptService : AnswerOptionService,\n    private config : DynamicDialogConfig,\n    private dialogService : DialogService\n    ) { \n\n      this.exam = new ExamDto\n      this.questions = new Array<QuestionDto>();\n      this.ansOpts = new Array<AnswerOptionDto>();\n    }\n\n  ngOnInit(): void {\n    this.exam = this.config.data;\n    this.getQuestions();\n  }\n\n  private getQuestions() : void {\n    this.questionService.getQuestionByExam(this.exam.id).subscribe(\n      questions => {\n        let QUESTION_INDEX = 0;\n        questions.forEach( question => {\n          question.questionImage = question.questionImage !== \"\" ? `http://localhost:8090/question/getImage/?filename=${question.questionImage}` : \"\";\n          this.questions.push(question);\n          question\n          QUESTION_INDEX += 1;\n        });\n      },\n      error => console.log(error)\n    );\n  }\n\n  private viewAnsOptDetails() : void {\n    this.dialogService.open(AnsOptsDetailsComponent, {\n      data : this.ansOpts,\n      header: 'Answer options details',\n      width: '70%'\n    });\n  }\n\n  public setAnswerOpts(selectedQuestion : QuestionDto) : void {\n\n    this.ansOptService.getAnsOptByQuestion(selectedQuestion.id).subscribe(\n      ansOpts => {\n        this.ansOpts = ansOpts;\n        this.viewAnsOptDetails();\n      },\n      error => console.log(error)\n    );\n  }\n}\n","<b>Professor: </b> {{exam.professor.name}} {{exam.professor.lastname}}\r\n\r\n<ul>    \r\n    <li><b>Exam name: </b> {{exam.name}}</li>\r\n    <li><b>Description: </b> {{exam.description}}</li>\r\n    <li><b>Link: </b> {{exam.link}}</li>\r\n    <li><b>Max grade: </b> {{exam.maxGrade}}</li>\r\n    <li><b>Durability: </b> {{exam.durability}}</li>\r\n</ul>\r\n\r\n<p-table [value]=\"questions\" [paginator]=\"true\" [rows]=\"10\" sortMode=\"multiple\">\r\n    <ng-template pTemplate=\"header\">\r\n        <tr>\r\n            <th>Image</th>\r\n            <th>Description</th>\r\n            <th>Kind of question</th>\r\n            <th>Weight</th>\r\n            <th>View answer options details</th>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-question>\r\n        <tr>\r\n            <td><img [src]=\"question.questionImage\" height=\"25\" *ngIf=\"question.questionImage !== ''\" /></td>\r\n            <td>{{question.description}}</td>\r\n            <td>{{question.type | questionType}}</td>\r\n            <td>{{question.weight | weight}}</td>\r\n            <td *ngIf=\"question.type !== 'op'\">\r\n                <button pButton type=\"button\" icon=\"pi pi-eye\" class=\"p-button-text\" (click)=\"setAnswerOpts(question)\"></button>\r\n            </td>\r\n        </tr>\r\n    </ng-template>\r\n</p-table>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { ExamStudentDto } from '../dto/ExamStudentDto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExamStudentService {\n\n  constructor(private http : HttpClient) { }\n\n  public getExamStudents() : Observable<Array<ExamStudentDto>> {\n    return this.http.get<Array<ExamStudentDto>>(environment.apiURL + 'examStudent/all');\n  }\n\n  public getExamStudent(examStudentId : number) : Observable<ExamStudentDto> {\n    return this.http.get<ExamStudentDto>(environment.apiURL + 'examStudent/' + examStudentId);\n  }\n\n  public getExamStudentsByExam(examId : number) : Observable<Array<ExamStudentDto>> {\n    return this.http.get<Array<ExamStudentDto>>(environment.apiURL + 'examStudent/byexam/?id=' + examId);\n  }\n\n  public getExamStudentsByStudent(studentId : number) : Observable<ExamStudentDto> {\n    return this.http.get<ExamStudentDto>(environment.apiURL + 'examStudent/bystudent/?id=' + studentId);\n  }\n\n  public saveExamStudent(examStudent : ExamStudentDto) : Observable<ExamStudentDto> {\n    return this.http.post<ExamStudentDto>(environment.apiURL + 'examStudent', examStudent);\n  }\n\n  public updateExamStudent(examStudent : ExamStudentDto) : Observable<ExamStudentDto> {\n    return this.http.put<ExamStudentDto>(environment.apiURL + 'examStudent', examStudent);\n  }\n\n  public delExamStudent(examStudent : ExamStudentDto) : Observable<String> {\n    return this.http.delete(environment.apiURL + 'examStudent/' + examStudent.id, {responseType : 'text'});\n  }\n}\n","import { ProfessorDto } from './ProfessorDto';\r\n\r\nexport class ExamDto {\r\n\r\n    public id : number;\r\n    public professor : ProfessorDto;\r\n    public description : String;\r\n    public link : String;\r\n    public maxGrade : Number;\r\n    public name : String;\r\n    public durability : Number;\r\n\r\n    constructor() {\r\n        this.id = 0;\r\n        this.professor = new ProfessorDto;\r\n        this.description = new String;\r\n        this.link = new String;\r\n        this.maxGrade = 0.0;\r\n        this.name = new String;\r\n        this.durability = 0;\r\n    }\r\n\r\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'weight'\n})\nexport class WeightPipe implements PipeTransform {\n\n  transform(weight: number): string {\n    let data : string = \"\";\n    data = (weight == 1) ? \"100%\" : (weight * 100).toPrecision(2) + '%';\n    return data;\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { QuestionDto } from 'src/app/dto/abstractDto/QuestionDto';\nimport { AnswerOptionDto } from 'src/app/dto/AnswerOptionDto';\nimport { ExamDto } from 'src/app/dto/ExamDto';\nimport { ExamStudentDto } from 'src/app/dto/ExamStudentDto';\nimport { OpenQuestionDto } from 'src/app/dto/OpenQuestionDto';\nimport { OpenResponseDto } from 'src/app/dto/OpenResponseDto';\nimport { SelectedResponseDto } from 'src/app/dto/SelectedResponseDto';\nimport { StudentDto } from 'src/app/dto/StudentDto';\nimport { AnswerOptionService } from 'src/app/services/answer-option.service';\nimport { ExamStudentService } from 'src/app/services/exam-student.service';\nimport { OpenResponseService } from 'src/app/services/open-response.service';\nimport { QuestionService } from 'src/app/services/question.service';\nimport { SelectedResponseService } from 'src/app/services/selected-response.service';\n\n@Component({\n  selector: 'app-solve-exam',\n  templateUrl: './solve-exam.component.html',\n  styleUrls: ['./solve-exam.component.css'],\n  providers: [MessageService]\n})\nexport class SolveExamComponent implements OnInit {\n\n  @Input() public exam : ExamDto;\n  @Input() public student : StudentDto;\n  @Input() public examStudent : ExamStudentDto;\n\n  public questions : Array<QuestionDto>;\n  public question : QuestionDto;\n  public questionIndex : number;\n  public openResponseForm : FormGroup;\n  public ansOpts : Array<any>;\n  public loadedAnsOpts : Array<AnswerOptionDto>;\n  public maxGrade : number;\n  public imgUrl : any;\n  public thereWereOpenQuestion : boolean;\n  public examHasBeenEnded : boolean;\n\n  public responses : Array<Array<any>>;\n\n  public selectedAnsOpt : AnswerOptionDto;\n  public selectedAnsOpts : Array<AnswerOptionDto>;\n\n  constructor(\n    private questionService : QuestionService,\n    private ansOptService : AnswerOptionService,\n    private examStudentService : ExamStudentService,\n    private openResponseService : OpenResponseService,\n    private selectedResponseService : SelectedResponseService,\n    private formBuilder : FormBuilder,\n    public messageService : MessageService\n  ) { \n    this.exam = new ExamDto;\n    this.student = new StudentDto;\n    this.examStudent = new ExamStudentDto\n    this.questions = new Array<QuestionDto>();\n    this.question = new OpenQuestionDto;\n    this.question.type = \"\";\n    this.questionIndex = 0;\n    this.ansOpts = [];\n    this.loadedAnsOpts = new Array<AnswerOptionDto>();\n    this.maxGrade = 5.0;\n\n    this.responses = [];\n    this.openResponseForm = this.formBuilder.group({\n      content : new FormControl('', [Validators.max(2048)])\n    });\n\n    this.selectedAnsOpt = new AnswerOptionDto;\n    this.selectedAnsOpts = new Array<AnswerOptionDto>();\n    this.imgUrl = \"\";\n    this.thereWereOpenQuestion = false;\n    this.examHasBeenEnded = false;\n  }\n\n  ngOnInit(): void {\n    this.questionService.getQuestionByExam(this.exam.id).subscribe(\n      questions => {\n        this.questions = questions;\n        (this.questions.length > 0 ) ? this.setFirstQuestion() : false;\n        this.setResponses();\n      },\n      error => console.log(error)\n    );\n  }\n\n  private getImage(question : QuestionDto) : void {\n\n    if (question.questionImage === \"\") {\n      return;\n    }\n    \n    this.questionService.getImage(question.questionImage).subscribe(\n      image => {\n        let reader = new FileReader();\n        reader.readAsDataURL(image);\n        reader.onload = () => {\n          this.imgUrl = reader.result;\n        }\n      },\n      error => console.error(error)\n    );\n  }\n\n  private resetImage() : void {\n    this.imgUrl = \"\";\n  }\n\n  private setFirstQuestion() : void {\n    let FIRST_QUESTION = 0;\n    this.questionIndex = FIRST_QUESTION;\n    this.question = this.questions[FIRST_QUESTION];\n    \n    if (this.question.questionImage !== \"\") {\n      this.getImage(this.question);\n    }\n    // if question type is not open question, set answer options\n    (this.question.type!=='op') ? this.getAnsOpts(this.question) : false;\n  }\n\n  private setResponses() : void {\n    this.questions.forEach( question => this.responses.push([]));\n  }\n\n  private getAnsOpts(question : QuestionDto) : void {\n    this.ansOptService.getAnsOptByQuestion(question.id).subscribe(\n      ansOpts => {\n        this.ansOpts.push({question : question, ansOpts : ansOpts})\n        this.loadAnsOpts();\n      },\n      error => console.log(error)\n    );\n  }\n\n  private setOpenResponseInfo(openResponse : OpenResponseDto) {\n    let openResponseForm = this.openResponseForm.value;\n    openResponse.content = openResponseForm.content;\n    openResponse.examStudent = this.examStudent;\n    openResponse.question = this.question;\n    openResponse.valoration = 0.0;\n  }\n\n  private addOpenResponse() : void {\n    let openResponseExist : boolean = !(this.responses[this.questionIndex].length===0);\n    let response : OpenResponseDto; let RESPONSE = 0;\n    \n    if (openResponseExist) {\n      response = this.responses[this.questionIndex][RESPONSE];\n      this.setOpenResponseInfo(response);\n      this.responses[this.questionIndex][RESPONSE] = response;\n    }\n    else {\n      response = new OpenResponseDto;\n      this.setOpenResponseInfo(response);\n      this.responses[this.questionIndex].push(response);\n    }\n  }\n\n  private loadOpenResponseInfoIntoOpenResponseForm(openResponse : OpenResponseDto) : void {\n    this.openResponseForm.setValue({\n      content : openResponse.content\n    });\n  }\n\n  private clearOpenResponseForm() : void {\n    this.openResponseForm.reset({\n      content : ''\n    })\n  }\n\n  private loadOpenResponse() : void {\n    if (this.responses[this.questionIndex].length > 0) {\n      let RESPONSE = 0;\n      let savedOpenResponse : OpenResponseDto = this.responses[this.questionIndex][RESPONSE]; \n      this.loadOpenResponseInfoIntoOpenResponseForm(savedOpenResponse);\n    }\n  }\n\n  private addMultiUniqueResponse() : void {\n    let multiUniqueResponseExist : boolean = !(this.responses[this.questionIndex].length===0);\n    \n    if (multiUniqueResponseExist) {\n      let RESPONSE = 0;\n      this.responses[this.questionIndex][RESPONSE] = this.selectedAnsOpt;\n    }\n    else {\n      this.responses[this.questionIndex].push(this.selectedAnsOpt);\n    }\n  }\n\n  private loadMultiUniqueResponse() : void {\n    let multiUniqueResponseExist : boolean = !(this.responses[this.questionIndex].length===0);\n\n    if (multiUniqueResponseExist) {\n      let RESPONSE = 0;\n      this.selectedAnsOpt = this.responses[this.questionIndex][RESPONSE];\n    }\n  }\n\n  private addeMultiMultiResponse() : void {\n    this.responses[this.questionIndex] = this.selectedAnsOpts;\n  }\n\n  private loadMultiMultiResponse() : void {\n    this.selectedAnsOpts = this.responses[this.questionIndex];\n  }\n\n  private loadAnsOpts() : boolean {\n    for (let i=0; i<this.ansOpts.length; i++) {\n      let pair = this.ansOpts[i];\n      if (pair.question === this.question) {\n          this.loadedAnsOpts = pair.ansOpts;\n          return true;\n      }\n    }\n    return false;\n  }\n\n  private checkAndLoadAnsOpts() : void {\n    let existAnsOpts : boolean = false;\n    existAnsOpts = this.loadAnsOpts();\n    (!existAnsOpts) ? this.getAnsOpts(this.question) : false;\n  }\n\n  private addStudentResponse() : void {\n    if (this.question.type===\"op\") {\n      this.addOpenResponse();\n      this.clearOpenResponseForm();\n    }\n    else if (this.question.type===\"mu\") {\n      this.addMultiUniqueResponse();\n    } // mm question type\n    else {\n      this.addeMultiMultiResponse();\n    }\n  }\n\n  private processStudentResponses(questionIndexOperation : number) : void {\n    /* adding student answer of current question */ \n    this.addStudentResponse();\n\n    /* loading student answer of next/back question if it exist */\n    this.questionIndex += questionIndexOperation;\n    this.question = this.questions[this.questionIndex];\n    this.resetImage();\n    this.getImage(this.question);\n\n    if (this.question.type===\"op\") {\n      this.loadOpenResponse();\n    }\n    else if (this.question.type===\"mu\") {\n      this.checkAndLoadAnsOpts();\n      this.loadMultiUniqueResponse();\n    } // mm question type\n    else {\n      this.checkAndLoadAnsOpts();\n      this.loadMultiMultiResponse();\n    }\n  }\n\n  public back() : void {\n    this.processStudentResponses(-1);\n  }\n\n  public next() : void {\n    this.processStudentResponses(1);\n  }\n\n  private saveOpenResponse(openResponse : OpenResponseDto) : void {\n    this.openResponseService.saveOpenResponse(openResponse).subscribe(\n      openResponse => openResponse,\n      error => console.log(error)\n    );\n  }\n\n  private saveSelectedResponse(selectedResponse : SelectedResponseDto) : void {\n    this.selectedResponseService.saveSelectedResponse(selectedResponse).subscribe(\n      selectedResponse => selectedResponse,\n      error => console.log(error)\n    );\n  }\n\n  private setSelectedResponseInfo(question : QuestionDto, selectedResponse : SelectedResponseDto, \n    selectedAnsOpt : AnswerOptionDto) : void {\n    selectedResponse.valoration = question.weight * selectedAnsOpt.weight * this.maxGrade;\n    selectedResponse.examStudent = this.examStudent;\n    selectedResponse.answerOption = selectedAnsOpt;\n  }\n\n  public saveExamStudent() : void {\n    this.examStudentService.saveExamStudent(this.examStudent).subscribe(\n      examStudent => {\n        this.examStudent = examStudent;\n        this.messageService.add({severity:'success', summary:'Success', detail:'Your response to this exam has been saved'});\n        this.saveStudentResponses();\n      },\n      error => {\n        console.log(error);\n        this.messageService.add({sticky:true, severity:'error', summary:'Error', detail:'There was error saving you exam response!'});\n      }\n    );\n  }\n\n  private updateExamStudent() : void {\n    this.examStudentService.updateExamStudent(this.examStudent).subscribe(\n      examStudent => this.examStudent = examStudent,\n      error => console.log(error)\n    );\n  }\n\n  private saveStudentResponses() : void {\n    this.addStudentResponse();\n    let QUESTION_INDEX = 0;\n    let studentGrade : number = 0.0;\n\n    this.questions.forEach( question => {\n      // save OPen responses\n      if (question.type === \"op\") {\n        let OPEN_RESPONSE_INDEX = 0;\n        let openResponse : OpenResponseDto = this.responses[QUESTION_INDEX][OPEN_RESPONSE_INDEX];\n        openResponse.examStudent = this.examStudent;\n        studentGrade += question.weight * openResponse.valoration;\n        this.saveOpenResponse(openResponse);\n        this.thereWereOpenQuestion = true;\n      } \n      \n      // save Multple Unique response\n      else if (question.type === \"mu\") {\n        let UNIQUE_RESPONSE_INDEX = 0;\n        let selectedResponse = new SelectedResponseDto;\n        let selectedAnsOpt : AnswerOptionDto = this.responses[QUESTION_INDEX][UNIQUE_RESPONSE_INDEX];\n        this.setSelectedResponseInfo(question, selectedResponse, selectedAnsOpt);\n        studentGrade += selectedResponse.valoration;\n        this.saveSelectedResponse(selectedResponse);\n      }\n      \n      // save Multiple Multiple responses\n      else {\n        this.responses[QUESTION_INDEX].forEach( selectedAnsOPt => {\n          let selectedResponse = new SelectedResponseDto;\n          this.setSelectedResponseInfo(question, selectedResponse, selectedAnsOPt);\n          studentGrade += selectedResponse.valoration;\n          this.saveSelectedResponse(selectedResponse);\n        });\n      }\n\n      QUESTION_INDEX += 1;\n    });\n\n    this.examStudent.definitiveGrade = studentGrade;\n    this.updateExamStudent();\n    this.questions = new Array<QuestionDto>();\n    this.examHasBeenEnded = true;\n  }\n}\n","<p-toast></p-toast>\n<div *ngIf=\"questions.length!==0\">\n    <div *ngIf=\"question.id!==0\">\n        <img [src]=\"imgUrl\" height=\"25\" *ngIf=\"imgUrl\">\n        <b> {{ question.description }}</b>\n    </div>\n\n    <div *ngIf=\"question.type==='op'\">    \n        <form [formGroup]=\"openResponseForm\">\n            <div class=\"p-fluid p-formgrid p-grid\">\n                <div class=\"p-field p-col-12\">\n                    <label for=\"content\">Your response</label>\n                    <textarea id=\"content\" [rows]=\"4\" [autoResize]=\"true\" pInputTextarea formControlName=\"content\"></textarea>\n                </div>\n            </div>\n        </form>\n    </div>\n\n    <div *ngIf=\"question.type==='mu'\">\n        <div *ngFor=\"let ansOpt of loadedAnsOpts\" class=\"p-field-radiobutton\">\n            <p-radioButton [inputId]=\"ansOpt.id.toString()\" name=\"multipleUniqueGroup\" [value]=\"ansOpt\" [(ngModel)]=\"selectedAnsOpt\"></p-radioButton>\n            <label [for]=\"ansOpt.id\">{{ansOpt.description}}</label>\n        </div>\n    </div>\n\n    <div *ngIf=\"question.type==='mm'\">\n        <div *ngFor=\"let ansOpt of loadedAnsOpts\" class=\"p-field-checkbox\">\n            <p-checkbox [inputId]=\"ansOpt.id.toString()\" name=\"multipleMultipleGroup\" [value]=\"ansOpt\"  [(ngModel)]=\"selectedAnsOpts\"></p-checkbox>\n            <label [for]=\"ansOpt.id\">{{ansOpt.description}}</label>\n        </div>\n    </div>\n\n    <div *ngIf=\"questionIndex-1>=0\" class=\"left_button\">\n        <button pButton type=\"button\" icon=\"pi pi-arrow-left\" class=\"p-button-text\" (click)=\"back()\"></button>\n    </div>\n\n    <div *ngIf=\"questionIndex+1<questions.length\" class=\"right_button\">\n        <button pButton type=\"button\" icon=\"pi pi-arrow-right\" class=\"p-button-text\" (click)=\"next()\"></button>\n    </div>\n\n    <div *ngIf=\"questionIndex+1===questions.length\" class=\"right_button\">\n        <button pButton type=\"button\" value=\"Send responses\" icon=\"pi pi-check\" (click)=\"saveExamStudent()\"></button>\n    </div>\n</div>\n\n<div *ngIf=\"examHasBeenEnded && !thereWereOpenQuestion\">\n    <b>Your final grade is: </b> {{examStudent.definitiveGrade}}\n</div>\n<div *ngIf=\"examHasBeenEnded &&  thereWereOpenQuestion\">\n    <b>You have been replied to this exam, wait for you final grade</b>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ProfessorDto } from '../dto/ProfessorDto';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfessorService {\n\n  constructor(private http : HttpClient) { }\n\n  public getProfessors() : Observable<Array<ProfessorDto>> {\n    return this.http.get<Array<ProfessorDto>>(environment.apiURL + 'professor');\n  }\n\n  public getByUsername(username : String) : Observable<ProfessorDto> {\n    return this.http.get<ProfessorDto>(environment.apiURL + 'professor/byusername/?username=' + username);\n  }\n\n  public saveProfessor(professor : ProfessorDto) : Observable<ProfessorDto> {\n    return this.http.post<ProfessorDto>(environment.apiURL + 'professor', professor);\n  }\n\n  public updateProfessor(professor : ProfessorDto) : Observable<ProfessorDto> {\n    return this.http.put<ProfessorDto>(environment.apiURL + 'professor', professor);\n  }\n\n  public delProfessor(professor : ProfessorDto) : Observable<String> {\n    return this.http.delete(environment.apiURL + 'professor/' + professor.id, {responseType : 'text'});\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ExamDto } from 'src/app/dto/ExamDto';\nimport { ExamService } from 'src/app/services/exam.service';\nimport { environment } from 'src/environments/environment';\nimport { map } from 'rxjs/operators';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { StudentDto } from 'src/app/dto/StudentDto';\nimport { StudentService } from 'src/app/services/student.service';\nimport { MessageService } from 'primeng/api';\nimport { ExamStudentService } from 'src/app/services/exam-student.service';\nimport { ExamStudentDto } from 'src/app/dto/ExamStudentDto';\n\n@Component({\n  selector: 'app-student-form',\n  templateUrl: './student-form.component.html',\n  styleUrls: ['./student-form.component.css'],\n  providers: [MessageService]\n})\nexport class StudentFormComponent implements OnInit {\n\n  public exam : ExamDto;\n  public studentForm : FormGroup;\n  public isQueryingStudent : boolean;\n  public student : StudentDto;\n  public examStudent : ExamStudentDto;\n  public examStarted : boolean;\n\n  constructor(\n    public route : ActivatedRoute,\n    private formBuilder : FormBuilder,\n    public examService : ExamService,\n    public studentService : StudentService,\n    public examStudentService : ExamStudentService,\n    public messageService : MessageService\n  ) { \n    this.exam = new ExamDto;\n    route.params.pipe(map(p => p.id)).subscribe(\n      param => {\n        this.getExamByLink(environment.urlExams + param);\n      }\n    );\n\n    this.studentForm = this.formBuilder.group({\n      identificationCard : new FormControl(0.0, [Validators.required, Validators.min(0)]),\n      name : new FormControl('student name', [Validators.required]),\n      lastname : new FormControl('student lastname', [Validators.required])\n    });\n\n    this.isQueryingStudent = true;\n    this.student = new StudentDto;\n    this.examStudent = new ExamStudentDto;\n    this.examStarted = false;\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  private checkIfStudentHasAreply() : void {\n    this.examStudentService.getExamStudentsByStudent(this.student.id).subscribe(\n      examStudent => {\n        if (examStudent && examStudent.exam.id === this.exam.id) {\n          this.examStudent = examStudent;\n        } else {\n          this.isQueryingStudent = false;\n        }\n      },\n      error => console.log(error)\n    )\n  }\n\n  private getExamByLink(link : string) : void {\n    this.examService.getExamByLink(link).subscribe(\n      exam => this.exam = exam,\n      error => console.log(error)\n    );\n  }\n\n  private extracInfoFromStudentForm(student : StudentDto) : void {\n    let studentForm : StudentDto = <StudentDto> this.studentForm.value;\n    student.identificationCard = studentForm.identificationCard\n    student.name = studentForm.name;\n    student.lastname = studentForm.lastname;\n  }\n\n  public queryStudent() : void {\n    let student = new StudentDto;\n    this.extracInfoFromStudentForm(student);\n    this.studentService.getStudentByIdentificationCard(student.identificationCard).subscribe(\n      student => {\n        this.student = student;\n        this.checkIfStudentHasAreply();\n      },\n      error => console.log(error)\n    );\n    \n  }\n\n  public createStudent() : void {\n    let student : StudentDto = new StudentDto;\n    this.extracInfoFromStudentForm(student);\n    this.studentService.saveStudent(student).subscribe(\n      student => {\n        this.student = student;\n        this.messageService.add({severity:'success', summary:'Success', detail:'Student logged up successfully'})\n      },\n      error => {\n        console.log(error)\n        this.messageService.add({severity:'error', summary:'Error', detail:'Student was not logged up'})\n      }\n    );\n  }\n\n  public startExam() : void {\n    this.examStudent.exam = this.exam;\n    this.examStudent.student = this.student;\n    this.examStarted = true;\n  }\n}\n","<div *ngIf=\"examStudent.id !== 0\">\r\n    <b>Your final grade was: </b> {{examStudent.definitiveGrade}}\r\n</div>\r\n\r\n<div *ngIf=\"exam.id===0\">\r\n    <h1> Exam could not be found! check your URL</h1>\r\n</div>\r\n\r\n<div *ngIf=\"exam.id !== 0 && student.id !==0 && !examStarted && examStudent.id === 0\" class=\"p-field p-col-12 p-md-12\">\r\n    <h1> Exam description </h1>\r\n    <p>\r\n        {{exam.description}}\r\n    </p>\r\n</div>\r\n\r\n<div *ngIf=\"exam.id!==0 && !examStarted && examStudent.id === 0\">\r\n    <p-toast></p-toast>\r\n    <form [formGroup]=\"studentForm\">\r\n        <div class=\"p-fluid p-formgrid p-grid\">\r\n            <div class=\"p-field p-col-12\">\r\n                <label for=\"identificationCard\">Identification card</label>\r\n                <p-inputNumber id=\"identificationCard\" [min]=\"1\" formControlName=\"identificationCard\"></p-inputNumber>\r\n            </div>\r\n            <div *ngIf=\"student.id===0 && !isQueryingStudent\" class=\"p-field p-col-12 p-md-6\">\r\n                <label for=\"student-name\">Name</label>\r\n                <input id=\"student-name\" type=\"text\" pInputText formControlName=\"name\"> \r\n            </div>\r\n            <div *ngIf=\"student.id===0 && !isQueryingStudent\" class=\"p-field p-col-12 p-md-6\">\r\n                <label for=\"student-lastname\">Lastname</label>\r\n                <input id=\"student-lastname\" type=\"text\" pInputText formControlName=\"lastname\">\r\n            </div>\r\n\r\n            <div *ngIf=\"isQueryingStudent\" class=\"p-field p-col-12 p-md-12\">\r\n                <p-button [disabled]=\"studentForm.invalid\" icon=\"pi pi-check\" label=\"Query student\" class=\"p-button-secondary\" (click)=\"queryStudent()\"></p-button>\r\n            </div>\r\n            <div *ngIf=\"student.id===0 && !isQueryingStudent\" class=\"p-field p-col-12 p-md-12\">\r\n                <p-button [disabled]=\"studentForm.invalid\" icon=\"pi pi-check\" label=\"Log up student\" class=\"p-button-secondary\" (click)=\"createStudent()\"></p-button>\r\n            </div>\r\n            <div *ngIf=\"student.id!==0\" class=\"p-field p-col-12 p-md-12\">\r\n                <p-button [disabled]=\"studentForm.invalid\" icon=\"pi pi-check\" label=\"Start exam\" class=\"p-button-secondary\" (click)=\"startExam()\"></p-button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>\r\n\r\n<div *ngIf=\"examStarted\">\r\n    <app-solve-exam [exam]=\"exam\" [student]=\"student\" [examStudent]=\"examStudent\"></app-solve-exam>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CreateProfessorComponent } from './Componentes/create-professor/create-professor.component';\r\nimport { ManageExamComponent } from './Componentes/manage-exam/manage-exam.component';\r\nimport { PageNotFoundComponent } from './Componentes/page-not-found/page-not-found.component';\r\nimport { StudentFormComponent } from './Componentes/student-form/student-form.component';\r\nimport { ProfessorMainViewComponent } from './Componentes/professor-main-view/professor-main-view.component';\r\nimport { ExamGradeMainViewComponent } from './Componentes/exam-grade-main-view/exam-grade-main-view.component';\r\nimport { ExamStudentsResponsesComponent } from './Componentes/exam-students-responses/exam-students-responses.component';\r\nimport { ExamStudentResponseDetailComponent } from './Componentes/exam-student-response-detail/exam-student-response-detail.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'create-professor', component: CreateProfessorComponent},\r\n  { path: 'professor-main-view', component: ProfessorMainViewComponent, \r\n    children: [\r\n      {path: 'manage-exam-view', component: ManageExamComponent},\r\n      {path: 'exam-grade-main-view', component: ExamGradeMainViewComponent},\r\n      {path: 'exam-students-view', component:ExamStudentsResponsesComponent},\r\n      {path: 'exam-student-response-detail', component:ExamStudentResponseDetailComponent}\r\n    ]\r\n  },\r\n  { path: 'present-exam/:id', component: StudentFormComponent},\r\n  { path: '', redirectTo: 'professor-main-view', pathMatch: 'full'},\r\n  { path: '**', component: PageNotFoundComponent}\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { ExamStudentDto } from \"./ExamStudentDto\";\r\nimport { OpenQuestionDto } from \"./OpenQuestionDto\";\r\n\r\nexport class OpenResponseDto  {\r\n    \r\n    public id : number;\r\n    public valoration : number;\r\n    public content : string;\r\n    public examStudent : ExamStudentDto;\r\n    public question : OpenQuestionDto;\r\n\r\n    constructor() {\r\n        this.id = 0;\r\n        this.valoration = 0.0;\r\n        this.content = \"\";\r\n        this.examStudent = new ExamStudentDto;\r\n        this.question = new OpenQuestionDto;\r\n    }\r\n\r\n}","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { AnswerOptionDto } from 'src/app/dto/AnswerOptionDto';\r\nimport { ManageAnsOpts } from 'src/app/tools/manageAnsOpts';\r\n\r\n@Component({\r\n  selector: 'app-answer-option-main-view',\r\n  templateUrl: './answer-option-main-view.component.html',\r\n  styleUrls: ['./answer-option-main-view.component.css'],\r\n  providers: []\r\n})\r\nexport class AnswerOptionMainViewComponent implements OnInit {\r\n\r\n  @Input() public creatingAnsOpt : boolean;\r\n  @Output() public creatingAnsOptChange : any;\r\n    \r\n  @Input() public ansOpt : AnswerOptionDto;\r\n  @Output() public ansOptChange : any;\r\n\r\n  @Input() public ansOptForm : FormGroup;\r\n  @Output() public ansOptFormChange : any;\r\n\r\n  @Input() public maxWeight : number;\r\n  @Output() public maxWeightChange : any;\r\n\r\n  @Input() public manageAnsOpts : ManageAnsOpts;\r\n  @Output() public manageAnsOptsChange : any;\r\n\r\n  constructor(\r\n  ) {\r\n    this.creatingAnsOpt = true;\r\n    this.ansOpt = new AnswerOptionDto;\r\n    this.ansOptForm = new FormGroup({});\r\n    this.maxWeight = 0;\r\n    this.manageAnsOpts = new ManageAnsOpts;\r\n\r\n    this.creatingAnsOptChange = new EventEmitter<boolean>();\r\n    this.ansOptChange = new EventEmitter<AnswerOptionDto>();\r\n    this.ansOptFormChange = new EventEmitter<FormGroup>();\r\n    this.maxWeightChange = new EventEmitter<number>();\r\n    this.manageAnsOptsChange = new EventEmitter<ManageAnsOpts>();\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  private addMaxWeight(ansOpt : AnswerOptionDto) : void {\r\n    this.maxWeight += ansOpt.weight;\r\n    this.maxWeight = Number (this.maxWeight.toPrecision(2));\r\n    this.maxWeightChange.emit(this.maxWeight);\r\n  }\r\n\r\n  private putAnsOptInfoIntoAnsOptForm(ansOpt : AnswerOptionDto) : void {\r\n    this.ansOptForm.setValue({\r\n      weight : ansOpt.weight,\r\n      correctAnswer : ansOpt.correctAnswer,\r\n      description : ansOpt.description\r\n    });\r\n    this.ansOptFormChange.emit(this.ansOptForm);\r\n  }\r\n\r\n  public updateAnsOpt(ansOpt : AnswerOptionDto) : void {\r\n    this.creatingAnsOpt = false;\r\n    this.creatingAnsOptChange.emit(this.creatingAnsOpt);\r\n    this.ansOpt = ansOpt;\r\n    this.ansOptChange.emit(this.ansOpt);\r\n    this.addMaxWeight(ansOpt);\r\n    this.putAnsOptInfoIntoAnsOptForm(ansOpt);\r\n  }\r\n\r\n  public delAnsOpt(ansOpt : AnswerOptionDto) : void {\r\n    this.manageAnsOpts.ansOpts.splice(this.manageAnsOpts.ansOpts.indexOf(ansOpt), 1);\r\n    this.manageAnsOpts.addItemIntoDelAnsOpts(ansOpt);\r\n    this.manageAnsOptsChange.emit(this.manageAnsOpts);\r\n    this.addMaxWeight(ansOpt);\r\n  }\r\n}\r\n","<p-toast></p-toast>\n<p-table [value]=\"manageAnsOpts.ansOpts\" [paginator]=\"true\" [rows]=\"10\" sortMode=\"multiple\">\n    <ng-template pTemplate=\"header\">\n        <tr>\n            <th>Description</th>\n            <th>Weight</th>\n            <th>Is correct</th>\n            <th>Action</th>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-ansOpt>\n        <tr>\n            <td>{{ansOpt.description}}</td>\n            <td>{{ansOpt.weight | weight}}</td>\n            <td>{{ansOpt.correctAnswer | correctAns}}</td>\n            <td>\n                <button [disabled]=\"!creatingAnsOpt\" pButton type=\"button\" icon=\"pi pi-pencil\" class=\"p-button-text\" (click)=\"updateAnsOpt(ansOpt)\"></button>\n                <button [disabled]=\"!creatingAnsOpt\" pButton type=\"button\" icon=\"pi pi-trash\" class=\"p-button-text\" (click)=\"delAnsOpt(ansOpt)\"></button>\n            </td>\n        </tr>\n    </ng-template>\n</p-table>","import { ExamDto } from './ExamDto';\r\nimport { StudentDto } from './StudentDto';\r\n\r\nexport class ExamStudentDto {\r\n\r\n    public id : number;\r\n    public definitiveGrade : number;\r\n    public student : StudentDto;\r\n    public exam : ExamDto;\r\n\r\n    constructor() {\r\n        this.id = 0;\r\n        this.definitiveGrade = 0.1;\r\n        this.student = new StudentDto();\r\n        this.exam = new ExamDto;\r\n    }\r\n\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { ExamDto } from '../dto/ExamDto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExamService {\n\n  constructor(private http : HttpClient) { }\n\n  public getExams() : Observable<Array<ExamDto>> {\n    return this.http.get<Array<ExamDto>>(environment.apiURL + 'exam/all');\n  }\n\n  public getExamByProfessor(professorID : Number) : Observable<Array<ExamDto>> {\n    let url : string = environment.apiURL + 'exam/byprofessor?id=' + professorID.toString();\n    console.log(url);\n    return this.http.get<Array<ExamDto>>(url);\n  }\n\n  public getExamByLink(link : String) : Observable<ExamDto> {\n    return this.http.get<ExamDto>(environment.apiURL + 'exam/bylink?id=' + link);\n  }\n\n  public saveExam(exam : ExamDto) : Observable<ExamDto> {\n    return this.http.post<ExamDto>(environment.apiURL + 'exam', exam);\n  }\n\n  public updateExam(exam : ExamDto) : Observable<ExamDto> {\n    return this.http.put<ExamDto>(environment.apiURL + 'exam', exam);\n  }\n\n  public delExam(exam : ExamDto) : Observable<String> {\n    return this.http.delete(environment.apiURL + 'exam/' + exam.id, {responseType : 'text'});\n  }\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}